[36m2024-06-10 09:48:50.012[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 48410 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-06-10 09:48:50.028[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-10 09:48:50.033[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-10 09:48:50.742[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-10 09:48:50.794[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 45 ms. Found 1 JPA repository interfaces.
[36m2024-06-10 09:48:51.036[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-10 09:48:51.955[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-10 09:48:51.970[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 09:48:51.970[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-10 09:48:51.971[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-10 09:48:52.177[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-10 09:48:52.177[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 2088 ms
[36m2024-06-10 09:48:52.459[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-10 09:48:52.525[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-10 09:48:52.863[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-10 09:48:53.281[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-10 09:48:53.947[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-10 09:48:53.980[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-10 09:48:54.681[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-10 09:48:54.697[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 09:48:56.237[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-10 09:48:56.393[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 09:48:56.395[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 09:48:56.394[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 09:48:56.397[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 09:48:56.596[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3da12ba4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64b0ec4a, org.springframework.security.web.context.SecurityContextPersistenceFilter@130ad58d, org.springframework.security.web.header.HeaderWriterFilter@64ff0eaa, org.springframework.security.web.authentication.logout.LogoutFilter@4ebd0b52, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@383a5260, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4986b0ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b949de4, org.springframework.security.web.session.SessionManagementFilter@24ea71d, org.springframework.security.web.access.ExceptionTranslationFilter@d0538b3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@12f933c7]
[36m2024-06-10 09:48:56.689[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-10 09:48:57.313[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 09:48:57.358[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-10 09:48:57.370[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 8.192 seconds (JVM running for 8.939)
[36m2024-06-10 09:48:59.053[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-10 09:48:59.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-10 09:48:59.055[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-10 09:48:59.055[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-10 09:48:59.055[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:49:09.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:49:19.065[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:49:29.071[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:49:39.074[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:49:45.474[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-06-10 09:49:45.474[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-06-10 09:49:45.475[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-06-10 09:49:45.779[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 09:49:45.812[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 09:49:45.831[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 09:49:45.847[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 09:49:45.892[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 09:49:45.946[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:45.946[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:46.005[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 09:49:46.359[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:46.360[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:46.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:46.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:46.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 09:49:47.102[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:47.102[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:47.102[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:47.103[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:47.109[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:47.109[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:47.112[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:47.114[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:47.114[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:47.114[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:47.120[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:47.121[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:47.135[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:47.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:47.236[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 09:49:47.236[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 09:49:47.236[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 09:49:47.237[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 09:49:47.333[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:49:47.333[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:49:47.336[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 09:49:49.075[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:49:59.077[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:50:09.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:50:19.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:50:27.286[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:50:27.286[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:50:27.352[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 09:50:27.594[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 09:50:27.598[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 09:50:29.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:50:30.240[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:50:30.241[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:50:30.255[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- WITH RECURSIVE STD AS
        (
            SELECT
                DATE_SUB(STR_TO_DATE('20240530112900', '%Y%m%d%H%i%s'), INTERVAL 179 MINUTE) AS BASE_TIME
            UNION ALL
            SELECT
                DATE_ADD(STD.BASE_TIME, INTERVAL 1 MINUTE) AS BASE_TIME
            FROM STD
            WHERE STD.BASE_TIME < STR_TO_DATE('20240530112900', '%Y%m%d%H%i%s')
        )
        SELECT
                DATE_FORMAT(BASE_TIME, '%H:%i') AS EVENT_EXP_TIME
            ,   DATE_FORMAT(BASE_TIME, '%Y-%m-%d %H:%i:%s') AS EVENT_TIME
            ,	IFNULL(DATA1, 0) DATA1
            ,	IFNULL(DATA2, 0) DATA2

        FROM
            STD
            LEFT OUTER JOIN
            (
                SELECT
                    EVENT_TIME

                        , CASE WHEN IFNULL(ATTEMPT_CNT, 0) != 0 THEN ROUND(((IFNULL(SUCCESS_CNT, 0) / ATTEMPT_CNT) * 100), 2) ELSE 0 END

      DATA1
                FROM

             PM_EPC_KPI_1M 

                      A
                WHERE 1 = 1

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE = 'SRMO'

            ) M1
            ON STD.BASE_TIME = M1.EVENT_TIME
            LEFT OUTER JOIN
            (
                SELECT
                    EVENT_TIME

                        , CASE WHEN IFNULL(ATTEMPT_CNT, 0) != 0 THEN ROUND(((IFNULL(SUCCESS_CNT, 0) / ATTEMPT_CNT) * 100), 2) ELSE 0 END

      DATA2
                FROM

             PM_EPC_KPI_1M 

                      A
                WHERE 1 = 1

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE = 'SRMO'

            ) M2
            ON

                    DATE_SUB(STD.BASE_TIME, INTERVAL 1 DAY) = M2.EVENT_TIME

        ORDER BY STD.BASE_TIME

[36m2024-06-10 09:50:34.792[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:50:34.793[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:50:34.800[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before set Executor
[36m2024-06-10 09:50:34.801[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Loop sArr
[36m2024-06-10 09:50:34.803[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Future
[36m2024-06-10 09:50:34.939[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_01015001'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:50:34.939[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_01015001'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:50:34.939[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_01015001'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:50:34.940[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_01015001'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:50:34.941[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_01015001'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:50:39.096[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:50:39.137[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- IMSI : OK
[36m2024-06-10 09:50:39.139[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- ENB : OK
[36m2024-06-10 09:50:39.139[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- MME : OK
[36m2024-06-10 09:50:39.140[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- SGW : OK
[36m2024-06-10 09:50:39.140[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- PGW : OK
[36m2024-06-10 09:50:43.460[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:50:43.461[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:50:43.519[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- WITH RECURSIVE STD AS
        (
            SELECT
                DATE_SUB(STR_TO_DATE('20240530112900', '%Y%m%d%H%i%s'), INTERVAL 179 MINUTE) AS BASE_TIME
            UNION ALL
            SELECT
                DATE_ADD(STD.BASE_TIME, INTERVAL 1 MINUTE) AS BASE_TIME
            FROM STD
            WHERE STD.BASE_TIME < STR_TO_DATE('20240530112900', '%Y%m%d%H%i%s')
        )
        SELECT
                DATE_FORMAT(BASE_TIME, '%H:%i') AS EVENT_EXP_TIME
            ,   DATE_FORMAT(BASE_TIME, '%Y-%m-%d %H:%i:%s') AS EVENT_TIME
            ,	IFNULL(DATA1, 0) DATA1
            ,	IFNULL(DATA2, 0) DATA2

        FROM
            STD
            LEFT OUTER JOIN
            (
                SELECT
                    EVENT_TIME

                ,	SUM(CAUSE_CNT)

      DATA1
                FROM

             PM_EPC_ROOT_CAUSE_1M 

                      A
                WHERE 1 = 1

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE = 'ATTACH'

        AND A.FAIL_TYPE = 'SUC_FAIL'
        AND A.CAUSE = 'C_01015001'

                        GROUP BY EVENT_TIME

            ) M1
            ON STD.BASE_TIME = M1.EVENT_TIME
            LEFT OUTER JOIN
            (
                SELECT
                    EVENT_TIME

                ,	SUM(CAUSE_CNT)

      DATA2
                FROM

             PM_EPC_ROOT_CAUSE_1M 

                      A
                WHERE 1 = 1

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE = 'ATTACH'

        AND A.FAIL_TYPE = 'SUC_FAIL'
        AND A.CAUSE = 'C_01015001'

                        GROUP BY EVENT_TIME

            ) M2
            ON

                    DATE_SUB(STD.BASE_TIME, INTERVAL 1 DAY) = M2.EVENT_TIME

        ORDER BY STD.BASE_TIME

[36m2024-06-10 09:50:49.100[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:50:50.620[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:50:50.620[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:50:50.665[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- WITH RECURSIVE STD AS
        (
            SELECT
                DATE_SUB(STR_TO_DATE('20240530112900', '%Y%m%d%H%i%s'), INTERVAL 179 MINUTE) AS BASE_TIME
            UNION ALL
            SELECT
                DATE_ADD(STD.BASE_TIME, INTERVAL 1 MINUTE) AS BASE_TIME
            FROM STD
            WHERE STD.BASE_TIME < STR_TO_DATE('20240530112900', '%Y%m%d%H%i%s')
        )
        SELECT
                DATE_FORMAT(BASE_TIME, '%H:%i') AS EVENT_EXP_TIME
            ,   DATE_FORMAT(BASE_TIME, '%Y-%m-%d %H:%i:%s') AS EVENT_TIME
            ,	IFNULL(DATA1, 0) DATA1
            ,	IFNULL(DATA2, 0) DATA2

        FROM
            STD
            LEFT OUTER JOIN
            (
                SELECT
                    EVENT_TIME

                ,	SUM(CAUSE_CNT)

      DATA1
                FROM

             PM_EPC_ROOT_CAUSE_1M 

                      A
                WHERE 1 = 1

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE = 'ATTACH'

        AND A.FAIL_TYPE = 'SUC_FAIL'
        AND A.CAUSE = 'C_05000015'

                        GROUP BY EVENT_TIME

            ) M1
            ON STD.BASE_TIME = M1.EVENT_TIME
            LEFT OUTER JOIN
            (
                SELECT
                    EVENT_TIME

                ,	SUM(CAUSE_CNT)

      DATA2
                FROM

             PM_EPC_ROOT_CAUSE_1M 

                      A
                WHERE 1 = 1

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE = 'ATTACH'

        AND A.FAIL_TYPE = 'SUC_FAIL'
        AND A.CAUSE = 'C_05000015'

                        GROUP BY EVENT_TIME

            ) M2
            ON

                    DATE_SUB(STD.BASE_TIME, INTERVAL 1 DAY) = M2.EVENT_TIME

        ORDER BY STD.BASE_TIME

[36m2024-06-10 09:50:59.105[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:51:09.107[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:51:15.625[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:51:15.625[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:51:15.628[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before set Executor
[36m2024-06-10 09:51:15.628[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before Loop sArr
[36m2024-06-10 09:51:15.630[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before Future
[36m2024-06-10 09:51:15.831[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000090'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:51:15.831[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000090'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:51:15.831[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000090'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:51:15.831[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000090'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:51:15.833[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000090'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:51:15.994[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- IMSI : OK
[36m2024-06-10 09:51:15.995[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- ENB : OK
[36m2024-06-10 09:51:15.997[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- MME : OK
[36m2024-06-10 09:51:15.997[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- SGW : OK
[36m2024-06-10 09:51:15.997[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- PGW : OK
[36m2024-06-10 09:51:19.109[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:51:29.115[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:51:39.121[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:51:49.126[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:51:59.132[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:52:09.138[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:52:19.144[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:52:29.150[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:52:39.154[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:52:49.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:52:59.161[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:53:09.162[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:53:19.168[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:53:29.174[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:53:39.180[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:53:49.182[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:53:59.182[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:54:05.091[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:54:05.092[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:54:05.095[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before set Executor
[36m2024-06-10 09:54:05.095[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Loop sArr
[36m2024-06-10 09:54:05.096[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Future
[36m2024-06-10 09:54:05.226[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000090'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:54:05.226[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000090'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:54:05.227[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000090'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:54:05.227[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000090'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:54:05.227[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000090'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 09:54:05.367[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- IMSI : OK
[36m2024-06-10 09:54:05.368[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- ENB : OK
[36m2024-06-10 09:54:05.368[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- MME : OK
[36m2024-06-10 09:54:05.369[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- SGW : OK
[36m2024-06-10 09:54:05.370[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- PGW : OK
[36m2024-06-10 09:54:09.183[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:54:19.187[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:54:29.193[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:54:39.198[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:54:49.200[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:54:59.201[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:55:09.207[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:55:19.211[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:55:29.212[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:55:39.218[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:55:49.223[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:55:59.224[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:56:09.230[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:56:19.235[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:56:29.241[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:56:39.247[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:56:49.253[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:56:59.256[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:57:09.258[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:57:19.264[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:57:29.269[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:57:39.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:57:41.342[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:57:41.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:57:41.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:57:41.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:57:41.344[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:57:41.344[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:57:41.345[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:57:41.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:57:41.353[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 09:57:41.354[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 09:57:41.356[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 09:57:49.276[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:57:59.282[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:58:03.755[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.755[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.756[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.756[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.756[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.756[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.755[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.757[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.760[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.760[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.760[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.761[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.764[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.764[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.776[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 09:58:03.776[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.777[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.777[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 09:58:03.779[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 09:58:03.779[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 09:58:03.781[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.781[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.787[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 09:58:03.797[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.797[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.801[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.802[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.802[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.802[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.803[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 09:58:03.803[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.803[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.804[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 09:58:03.804[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.804[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.804[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 09:58:03.933[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:03.933[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:03.935[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 09:58:09.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:58:19.294[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:58:24.034[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:24.035[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:24.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:24.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:24.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:24.034[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 09:58:24.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:24.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 09:58:24.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 09:58:24.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 09:58:24.440[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 09:58:29.296[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:58:39.302[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:58:49.307[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:58:59.313[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:59:09.318[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:59:19.324[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:59:29.329[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:59:39.336[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:59:49.342[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 09:59:59.348[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:00:09.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:00:19.360[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:00:29.365[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:00:39.367[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:00:49.369[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:00:59.374[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:01:09.380[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:01:19.385[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:01:29.391[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:01:39.396[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:01:49.403[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:01:59.408[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:02:09.413[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:02:19.417[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:02:29.422[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:02:39.428[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:02:49.430[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:02:59.432[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:03:09.434[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:03:19.437[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:03:29.439[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:03:38.648[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:03:38.650[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:03:38.650[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:03:38.650[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:03:38.651[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:03:38.652[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:03:38.651[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:03:38.653[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:03:38.659[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:03:38.660[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:03:38.661[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:03:39.440[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:03:49.445[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:03:59.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:04:09.454[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:04:19.456[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:04:29.461[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:04:39.462[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:04:49.468[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:04:59.469[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:05:09.470[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:05:19.474[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:05:29.477[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:05:39.481[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:05:49.487[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:05:59.491[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:06:09.494[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:06:19.497[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:06:29.502[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:06:39.508[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:06:49.513[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:06:59.515[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:07:09.520[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:07:19.526[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:07:29.532[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:07:32.985[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:07:32.985[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:07:33.336[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:07:39.538[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:07:49.543[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:07:59.547[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:08:09.552[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:08:12.460[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 10:08:12.467[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:08:12.485[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 10:08:12.492[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 10:08:12.499[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 10:08:12.532[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:12.532[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:12.540[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:08:12.677[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:12.677[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:12.711[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:12.711[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:12.739[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:08:13.046[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:13.046[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:13.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:13.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:13.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:13.050[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:13.052[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:13.052[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:13.056[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:08:13.063[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:13.064[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:13.066[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:13.067[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:08:13.068[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:13.069[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:13.069[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:13.071[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:08:13.077[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:08:13.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:13.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:13.192[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:08:19.555[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:08:24.937[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:24.937[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:25.043[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:08:25.169[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:25.169[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:25.173[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:25.173[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:25.172[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:25.173[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:25.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:25.172[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:25.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:25.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:25.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:25.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:25.180[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:08:25.183[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:08:25.187[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:08:25.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:25.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:25.221[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:08:25.330[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:25.330[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:25.331[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:08:29.561[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:08:39.564[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:08:45.383[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:45.384[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:45.385[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:45.383[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:45.383[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:45.385[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:45.385[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:45.385[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:45.487[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:08:45.487[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:08:45.490[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:08:47.254[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:47.254[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:47.254[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:47.254[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:47.254[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:47.255[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:08:47.255[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:47.254[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:08:47.264[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:08:47.265[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:08:47.266[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:08:49.569[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:08:59.574[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:09:09.580[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:09:19.581[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:09:29.585[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:09:39.586[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:09:49.591[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:09:59.593[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:10:09.598[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:10:19.599[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:10:29.604[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:10:31.718[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:10:31.718[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:10:39.611[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:10:49.617[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:10:59.623[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:11:09.629[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:11:19.634[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:11:29.640[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:11:39.645[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:11:49.650[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:11:59.654[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:12:03.383[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:12:03.383[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:12:09.660[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:12:19.665[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:12:29.670[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:12:39.672[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:12:49.677[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:12:59.683[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:13:09.685[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:13:19.691[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:13:29.696[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:13:39.702[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:13:49.703[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:13:59.706[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:14:09.712[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:14:19.713[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:14:29.717[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:14:39.721[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:14:49.722[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:14:59.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:15:09.729[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:15:19.730[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:15:29.732[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:15:39.737[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:15:49.740[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:15:59.744[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:16:09.746[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:16:19.751[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:16:29.752[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:16:30.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:16:30.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:16:30.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:16:30.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:16:30.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:16:30.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:16:30.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:16:30.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:16:30.990[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:16:30.990[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:16:30.992[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:16:34.502[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:16:34.502[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:16:34.557[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:16:34.661[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:16:34.670[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:16:39.758[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:16:49.759[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:16:59.761[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:17:09.762[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:17:19.766[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:17:29.771[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:17:39.777[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:17:49.780[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:17:59.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:18:09.789[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:18:19.795[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:18:29.801[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:18:39.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:18:49.804[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:18:59.809[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:19:09.813[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:19:19.819[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:19:29.824[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:19:39.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:19:43.057[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:43.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:43.071[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:19:43.123[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:19:43.127[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:19:43.186[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:43.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:43.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:43.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:43.186[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:43.193[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:43.198[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:19:43.199[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:43.199[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:43.280[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:19:43.408[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:19:43.411[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:19:43.479[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:43.479[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:43.479[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:43.479[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:43.480[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:19:43.480[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:19:43.482[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:43.482[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:43.482[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:43.483[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:43.496[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:19:49.832[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:19:57.219[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.220[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.222[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.222[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.222[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.223[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.223[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.223[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.223[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.223[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.222[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.225[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.252[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:19:57.254[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:19:57.254[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:19:57.255[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.255[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.255[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.255[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.261[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.261[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.264[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:19:57.264[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:19:57.269[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.269[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.271[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.271[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.271[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.271[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.272[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:19:57.273[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:19:57.288[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.288[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.287[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.289[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.290[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:19:57.378[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:19:57.378[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:19:57.381[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:19:59.835[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:20:00.137[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:00.137[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:00.192[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:20:00.969[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:00.969[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:00.969[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:00.969[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:00.971[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:00.972[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:00.969[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:00.974[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:00.974[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:00.974[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:00.979[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:00.979[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:00.984[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:20:00.990[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:20:00.990[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:20:01.011[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:01.011[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:01.013[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:20:01.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:01.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:01.151[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:20:09.841[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:20:19.847[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:20:29.852[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:20:38.124[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:38.126[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:38.126[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:38.126[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:38.138[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:38.138[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:38.147[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:20:39.858[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:20:44.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:44.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:44.424[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:20:46.897[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:46.898[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:46.898[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:46.898[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:46.899[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:46.899[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:46.901[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:46.901[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:46.902[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:46.902[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:46.912[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:46.913[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:46.915[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:46.916[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:20:46.918[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:20:46.916[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:46.920[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:20:46.954[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:20:47.047[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:20:47.047[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:20:47.052[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:20:49.863[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:20:59.868[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:21:09.873[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:21:19.876[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:21:29.882[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:21:39.887[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:21:49.888[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:21:59.891[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:22:09.892[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:22:19.897[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:22:29.903[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:22:39.904[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:22:49.909[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:22:59.911[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:23:09.914[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:23:19.915[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:23:29.981[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:23:39.987[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:23:49.992[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:23:59.998[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:24:10.000[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:24:20.006[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:24:30.010[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:24:40.016[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:24:50.020[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:25:00.025[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:25:10.028[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:25:20.032[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:25:30.035[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:25:40.040[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:25:50.042[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:26:00.044[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:26:10.050[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:26:16.143[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:16.143[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:16.143[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:16.143[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:16.145[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:16.144[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:16.176[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:26:20.051[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:26:27.665[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:27.666[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:27.735[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:26:30.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:26:30.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:30.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:30.946[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:30.946[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:30.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:30.946[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:30.949[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:30.950[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:30.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:30.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:30.986[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:30.986[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:30.987[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:30.987[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:31.050[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:26:31.051[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:26:31.051[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:26:31.052[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:26:39.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:26:39.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:26:39.959[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:26:40.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:26:50.066[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:27:00.071[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:27:10.077[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:27:20.081[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:27:30.087[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:27:40.090[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:27:50.096[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:28:00.102[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:28:05.829[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:05.830[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:05.829[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:05.830[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:05.829[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:05.832[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:05.842[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:28:06.266[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:06.267[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:06.284[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:28:10.103[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:28:10.374[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:10.374[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:10.374[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:10.375[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:10.376[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:10.376[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:10.374[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:10.377[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:10.378[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:10.378[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:10.386[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:10.386[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:10.404[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:10.404[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:10.476[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:28:10.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:28:10.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:28:10.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:28:10.598[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:10.599[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:10.600[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:28:20.105[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:28:30.110[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:28:40.111[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:28:45.067[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:45.081[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:45.067[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:45.080[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:28:45.090[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:45.090[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:28:45.098[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:28:50.117[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:29:00.123[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:29:10.124[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:29:20.130[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:29:30.131[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:29:39.844[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:29:39.844[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:29:39.850[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:29:39.867[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:29:39.867[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:29:39.869[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:29:39.877[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:29:40.137[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:29:50.142[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:30:00.147[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:30:10.153[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:30:20.159[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:30:30.161[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:30:40.162[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:30:50.166[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:31:00.171[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:31:10.173[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:31:20.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:31:30.185[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:31:40.190[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:31:50.197[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:32:00.199[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:32:10.202[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:32:20.209[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:32:25.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:32:25.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:32:25.225[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

                AND node_name LIKE concat('%', '16', '%')

        order by mtso_id, node_id

[36m2024-06-10 10:32:30.211[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:32:40.217[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:32:50.219[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:33:00.225[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:33:10.231[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:33:20.236[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:33:30.243[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:33:40.249[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:33:50.254[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:34:00.261[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:34:02.733[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:02.733[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:02.751[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:34:06.035[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:06.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:06.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:06.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:06.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:06.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:06.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:06.035[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:06.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:06.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:06.038[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:06.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:06.048[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:34:06.048[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:34:06.059[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:34:06.066[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:06.067[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:06.073[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:34:06.170[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:06.170[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:06.172[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:34:10.267[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:34:20.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:34:22.144[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:22.144[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:22.146[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:22.146[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:22.148[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:22.148[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:22.298[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:34:28.997[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:28.997[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:29.032[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:34:30.277[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:34:40.069[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:40.069[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:40.070[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:40.070[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:40.071[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:40.072[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:40.069[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:40.072[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:40.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:40.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:40.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:40.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:40.135[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:40.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:40.175[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:34:40.175[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:34:40.177[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:34:40.177[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:34:40.266[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:34:40.267[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:34:40.276[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:34:40.284[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:34:50.289[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:35:00.294[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:35:10.296[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:35:20.301[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:35:30.306[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:35:40.308[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:35:46.913[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:35:46.913[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:35:46.913[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:35:46.913[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:35:46.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:35:46.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:35:46.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:35:46.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:35:46.989[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:35:46.989[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:35:47.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:35:47.091[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:35:50.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:36:00.315[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:36:10.316[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:36:19.998[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:36:19.998[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:36:19.998[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:36:19.998[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:36:19.999[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:36:19.998[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:36:19.999[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:36:19.999[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:36:20.208[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:36:20.208[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:36:20.230[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:36:20.232[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:36:20.320[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:36:30.325[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:36:40.330[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:36:50.333[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:37:00.337[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:37:10.342[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:37:20.347[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:37:24.873[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:37:24.876[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:37:24.877[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:37:24.877[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:37:24.946[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:37:24.968[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:37:24.969[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:37:25.002[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:37:25.002[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:37:25.134[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:37:25.156[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:37:25.162[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:37:30.353[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:37:30.977[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:37:30.977[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:37:30.987[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:37:31.034[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:37:31.044[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:37:33.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:37:33.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:37:33.336[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:37:33.356[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:37:33.358[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:37:36.289[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:37:36.289[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:37:36.299[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:37:36.318[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:37:36.319[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:37:38.110[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:37:38.111[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:37:38.436[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0012'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:37:38.453[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:37:38.454[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0012'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:37:39.974[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:37:39.974[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:37:39.984[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:37:40.003[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:37:40.004[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:37:40.358[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:37:41.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:37:41.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:37:41.453[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:37:41.476[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:37:41.478[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:37:50.360[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:38:00.365[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:38:10.367[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:38:20.372[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:38:30.373[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:38:40.376[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:38:50.382[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:39:00.388[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:39:10.390[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:39:20.395[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:39:27.449[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:27.449[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:27.449[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:27.449[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:27.456[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:27.456[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:27.459[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:39:30.399[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:39:34.207[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:34.208[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:34.218[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:39:35.135[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:35.135[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:35.135[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:35.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:35.137[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:35.137[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:35.137[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:35.137[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:35.138[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:35.138[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:35.150[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:35.150[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:35.160[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:39:35.168[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:35.168[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:35.188[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:39:35.188[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:39:35.193[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:39:35.302[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:39:35.302[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:39:35.312[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:39:40.404[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:39:50.410[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:40:00.412[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:40:03.410[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:03.410[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:03.411[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:03.411[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:03.410[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:03.411[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:03.410[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:03.412[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:03.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:40:03.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:03.504[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:03.505[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:05.545[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:05.545[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:05.605[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:05.625[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:05.626[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:06.565[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:06.565[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:06.623[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:06.640[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:06.641[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:07.992[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:07.992[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:08.422[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:08.494[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:08.496[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:10.417[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:40:10.965[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:10.965[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:10.991[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:11.008[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:11.009[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:20.423[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:40:23.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:23.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:23.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:23.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:23.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:23.753[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:23.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:23.755[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:23.927[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:23.955[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:40:23.974[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:23.975[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:25.106[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:25.107[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:25.121[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:25.141[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:25.143[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:26.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:26.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:26.548[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:26.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:26.584[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:28.031[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:28.032[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:28.125[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:28.144[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:28.146[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:29.372[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:29.372[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:29.381[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:29.417[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:29.419[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:30.419[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:30.420[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:30.427[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:40:30.448[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:30.471[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:30.473[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:31.442[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:40:31.442[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:40:31.469[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:40:31.493[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:40:31.498[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:40:40.432[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:40:50.438[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:41:00.439[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:41:02.809[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:41:02.809[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:41:02.809[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:41:02.809[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:41:02.809[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:41:02.810[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:41:02.818[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:41:04.023[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:41:04.027[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:41:04.064[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:41:04.228[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:41:04.229[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:41:07.571[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:41:07.572[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:41:07.580[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:41:07.613[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:41:07.614[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:41:10.445[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:41:10.615[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:41:10.615[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:41:10.721[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:41:10.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:41:10.744[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:41:13.057[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:41:13.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:41:13.150[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:41:13.201[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:41:13.203[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:41:20.450[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:41:27.985[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:41:27.985[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:41:27.985[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:41:27.985[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:41:27.985[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:41:27.985[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:41:27.997[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:41:30.454[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:41:40.460[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:41:50.462[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:42:00.466[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:42:10.470[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:42:20.474[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:42:30.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:42:40.479[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:42:50.485[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:43:00.488[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:43:02.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:43:02.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:43:02.060[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:43:02.060[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:43:02.061[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:43:02.061[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:43:02.214[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:43:10.493[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:43:20.499[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:43:30.505[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:43:40.507[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:43:50.512[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:44:00.516[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:44:06.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:44:06.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:44:06.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:44:06.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:44:06.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:44:06.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:44:06.928[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:44:10.521[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:44:20.527[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:44:30.529[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:44:36.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:44:36.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:44:36.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:44:36.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:44:36.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:44:36.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:44:36.111[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:44:40.531[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:44:50.533[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:45:00.539[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:45:10.542[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:45:20.545[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:45:30.181[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:45:30.181[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:45:30.196[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:45:30.197[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:45:30.200[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:45:30.200[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:45:30.209[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:45:30.551[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:45:40.553[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:45:43.804[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:45:43.805[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:45:43.805[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:45:43.805[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:45:43.804[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:45:43.806[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:45:43.806[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:45:43.806[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:45:43.812[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:45:43.812[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:45:43.817[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:45:43.817[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:45:43.824[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:45:43.839[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:45:43.840[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:45:43.855[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:45:43.858[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:45:50.560[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:46:00.565[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:46:08.948[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:08.949[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:08.951[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:08.951[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:08.958[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:08.958[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:08.959[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:46:10.571[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:46:12.060[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:12.060[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:12.071[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:46:12.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:12.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:12.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:12.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:12.880[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:12.880[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:12.880[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:12.881[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:12.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:12.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:12.901[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:12.901[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:12.916[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:12.916[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:13.068[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:46:13.068[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:46:13.070[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:46:13.070[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:46:13.117[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:13.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:13.124[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:46:20.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:46:30.577[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:46:30.957[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:30.957[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:30.957[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:30.957[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:30.959[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:30.959[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:30.959[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:30.960[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:30.961[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:30.961[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:30.964[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:30.964[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:30.979[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:30.979[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:30.998[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:30.998[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:31.095[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:46:31.096[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:46:31.096[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:46:31.097[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:46:31.099[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:46:31.179[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:31.179[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:31.180[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:46:34.110[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:34.110[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:34.120[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:46:35.077[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:35.077[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:35.079[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:35.079[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:35.079[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:35.077[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:35.080[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:35.080[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:35.081[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:35.083[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:35.090[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:46:35.092[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:35.092[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:35.093[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:46:35.092[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:46:35.119[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:35.119[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:35.120[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:46:35.250[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:46:35.250[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:46:35.259[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:46:40.580[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:46:50.585[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:47:00.586[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:47:09.734[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:47:09.734[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:47:09.734[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:47:09.734[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:47:09.734[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:47:09.734[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:47:09.735[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:47:09.735[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:47:09.754[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:47:09.757[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:47:09.763[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:47:09.763[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:47:09.771[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:47:09.772[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:47:09.772[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:47:09.792[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:47:09.793[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:47:10.592[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:47:12.949[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:47:12.949[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:47:12.973[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:47:12.994[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:47:12.997[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:47:14.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:47:14.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:47:14.560[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:47:14.578[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:47:14.580[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:47:15.962[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:47:15.962[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:47:15.991[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:47:16.014[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:47:16.016[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:47:17.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:47:17.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:47:17.187[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:47:17.207[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:47:17.208[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:47:20.594[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:47:30.599[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:47:40.600[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:47:50.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:48:00.608[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:48:10.613[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:48:20.617[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:48:21.029[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:21.029[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:21.031[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:21.032[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:21.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:21.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:21.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:21.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:21.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:21.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:21.072[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:21.073[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:48:21.073[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:21.093[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:21.094[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:21.120[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:21.120[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:29.137[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:29.139[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:29.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:29.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:29.185[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:29.185[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:29.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:29.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:29.188[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:29.189[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:29.265[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:29.266[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:48:29.266[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:29.282[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:29.283[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:29.285[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:29.286[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:30.618[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:48:31.771[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:31.772[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:31.787[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:31.839[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:31.841[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:33.212[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:33.212[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:33.227[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:33.274[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:33.276[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:34.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:34.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:34.350[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0012'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:34.370[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:34.371[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0012'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:35.396[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:35.396[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:35.414[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:35.436[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:35.437[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:36.846[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:36.846[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:36.872[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:36.892[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:36.893[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:40.622[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:48:50.628[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:48:54.492[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:54.492[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:54.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0010'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:54.522[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:54.526[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0010'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:55.797[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:55.797[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:55.808[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0011'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:55.827[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:55.829[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0011'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:57.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:57.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:57.587[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:57.610[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:57.612[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:48:59.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:48:59.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:48:59.936[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:48:59.953[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:48:59.953[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:49:00.631[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:49:00.786[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:49:00.786[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:49:00.796[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:49:00.849[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:49:00.851[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:49:10.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:49:20.638[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:49:30.641[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:49:40.647[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:49:50.652[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:50:00.657[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:50:10.660[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:50:20.664[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:50:30.668[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:50:40.674[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:50:50.679[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:50:51.914[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:50:51.915[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:50:51.963[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:50:51.973[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:50:51.983[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:50:51.988[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:50:51.988[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:50:51.988[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:50:51.989[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:50:51.991[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:50:52.014[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:50:52.014[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:50:52.027[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:50:52.028[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:50:52.032[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '27579'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:50:52.051[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:50:52.052[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '27579'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:50:54.722[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:50:54.722[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:50:54.732[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '27579'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:50:54.836[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:50:54.837[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '27579'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:50:56.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:50:56.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:50:56.547[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '27579'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:50:56.571[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:50:56.572[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '27579'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:50:58.443[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:50:58.443[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:50:58.478[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:50:58.655[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:50:58.656[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:51:00.684[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:51:10.687[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:51:13.933[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:51:13.933[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:51:13.941[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:51:13.957[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:51:13.958[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:51:20.693[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:51:30.699[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:51:40.705[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:51:50.711[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:52:00.716[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:52:10.721[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:52:20.723[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:52:30.726[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:52:40.732[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:52:50.737[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:53:00.743[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:53:10.748[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:53:20.751[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:53:30.755[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:53:40.760[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:53:50.765[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:54:00.769[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:54:10.775[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:54:20.781[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:54:30.785[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:54:40.788[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:54:50.794[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:55:00.795[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:55:10.799[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:55:16.976[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:16.978[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:17.018[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:55:17.036[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:55:17.037[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:55:18.539[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:18.540[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:18.548[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:55:18.713[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:55:18.715[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:55:20.580[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:20.581[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:20.590[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '27579'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:55:20.628[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:55:20.629[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '27579'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:55:20.805[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:55:21.890[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:21.890[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:21.923[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:55:21.942[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:55:21.943[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:55:30.790[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:30.791[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:30.811[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:55:30.832[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:55:30.852[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:55:30.853[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:55:32.837[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:32.838[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:33.075[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:55:33.094[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:55:33.095[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '28690'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:55:36.838[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:36.838[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:36.941[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:55:37.782[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:37.783[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:37.783[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:37.783[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:37.782[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:37.784[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:37.782[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:37.785[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:37.782[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:37.786[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:37.782[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:37.787[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:37.794[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:55:37.801[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:55:37.838[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:55:37.852[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:37.852[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:37.852[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:55:37.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:37.957[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:37.958[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:55:40.817[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:55:48.195[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:48.197[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:48.214[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:55:49.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:49.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:49.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:49.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:49.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:49.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:49.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:49.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:49.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:49.038[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:49.044[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:49.045[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:49.062[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:49.062[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:49.126[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:55:49.126[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:55:49.127[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:55:49.127[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:55:49.227[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:55:49.227[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:55:49.228[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:55:50.819[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:56:00.823[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:56:10.825[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:56:20.540[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:20.541[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:20.542[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:20.540[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:20.542[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:20.542[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:20.541[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:20.543[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:20.542[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:20.543[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:20.542[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:20.561[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:20.607[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:20.607[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:20.608[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:20.608[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:20.648[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:56:20.648[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:56:20.650[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:56:20.650[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:56:20.650[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:56:20.742[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:20.743[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:20.744[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:56:20.830[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:56:23.521[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:23.522[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:23.542[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:56:24.445[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:24.445[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:24.447[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:24.447[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:24.448[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:24.448[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:24.447[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:24.449[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:24.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:24.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:24.456[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:56:24.459[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:56:24.463[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:56:24.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:24.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:24.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:24.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:24.493[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:56:24.589[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:24.589[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:24.600[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:56:30.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:30.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:30.114[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:56:30.836[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:56:30.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:30.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:30.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:30.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:30.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:30.921[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:30.921[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:30.921[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:30.923[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:30.923[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:30.927[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:30.928[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:30.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:30.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:31.071[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:56:31.071[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:56:31.072[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:56:31.072[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:56:31.125[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:31.125[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:31.126[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:56:40.842[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:56:50.847[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:56:57.922[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:57.923[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:57.936[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 10:56:58.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:58.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:58.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:58.921[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:58.921[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:58.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:58.921[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:58.921[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:58.922[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:58.922[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:58.928[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:56:58.929[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:56:58.932[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 10:56:58.946[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:58.947[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:58.951[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:58.951[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:58.960[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:56:59.062[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:56:59.062[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:56:59.065[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 10:57:00.849[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:57:10.854[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:57:20.860[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:57:30.861[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:57:40.867[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:57:50.869[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:58:00.875[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:58:10.879[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:58:20.878[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:58:30.262[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:58:30.263[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:58:30.263[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:58:30.263[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:58:30.292[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:58:30.291[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:58:30.328[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:58:30.878[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:58:40.883[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:58:50.888[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:58:55.271[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:58:55.271[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:58:55.272[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:58:55.272[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:58:55.271[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:58:55.273[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:58:55.286[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:58:58.741[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:58:58.741[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:58:58.741[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:58:58.741[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:58:58.741[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:58:58.741[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:58:58.751[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 10:59:00.893[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:59:02.934[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:02.934[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:02.944[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:03.116[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:03.118[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:09.399[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:09.399[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:09.415[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '29288'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:09.975[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:09.977[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '29288'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:10.895[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:59:12.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:12.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:12.367[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '29289'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:12.552[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:12.554[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '29289'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:15.044[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:15.044[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:15.065[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28862'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:15.372[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:15.373[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28862'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:17.531[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:17.531[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:17.541[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '29359'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:17.583[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:17.584[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '29359'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:20.032[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:20.032[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:20.044[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '29354'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:20.087[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:20.088[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '29354'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:20.896[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:59:23.476[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:23.476[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:23.592[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:23.610[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:23.611[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:24.937[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:24.937[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:24.960[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:25.167[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:25.169[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:30.898[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:59:33.756[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:33.756[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:33.768[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '5429'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:33.918[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:33.919[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '5429'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:37.304[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:37.304[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:37.315[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:37.361[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:37.362[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:38.234[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:38.234[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:38.250[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 10:59:38.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 10:59:38.273[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 10:59:40.899[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 10:59:42.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 10:59:42.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 10:59:42.550[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before set Executor
[36m2024-06-10 10:59:42.550[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Loop sArr
[36m2024-06-10 10:59:42.551[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Future
[36m2024-06-10 10:59:42.598[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000900'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 10:59:42.599[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000900'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 10:59:42.599[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000900'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 10:59:42.601[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000900'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 10:59:42.605[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000900'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 10:59:42.708[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- IMSI : OK
[36m2024-06-10 10:59:42.715[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- ENB : OK
[36m2024-06-10 10:59:42.716[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- MME : OK
[36m2024-06-10 10:59:42.718[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- SGW : OK
[36m2024-06-10 10:59:42.718[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- PGW : OK
[36m2024-06-10 10:59:50.904[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:00:00.907[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:00:10.913[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:00:20.915[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:00:30.920[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:00:40.925[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:00:50.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:01:00.931[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:01:10.933[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:01:20.934[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:01:21.311[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:01:21.311[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:01:21.312[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:01:21.312[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:01:21.312[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:01:21.313[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:01:21.314[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:01:21.315[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:01:21.380[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:01:21.390[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 11:01:21.460[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 11:01:21.462[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 11:01:21.512[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:01:21.512[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:01:21.524[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 11:01:21.560[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 11:01:21.562[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 11:01:30.936[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:01:40.940[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:01:50.943[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:02:00.948[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:02:10.951[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:02:20.957[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:02:30.962[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:02:40.967[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:02:50.970[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:03:00.976[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:03:10.979[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:03:20.985[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:03:30.991[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:03:40.993[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:03:50.998[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:04:01.000[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:04:11.006[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:04:21.009[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:04:31.010[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:04:41.012[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:04:51.017[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:05:01.023[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:05:11.029[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:05:21.032[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:05:31.038[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:05:41.042[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:05:51.045[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:06:01.051[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:06:11.056[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:06:21.062[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:06:31.067[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:06:41.073[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:06:51.076[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:07:01.078[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:07:11.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:07:21.088[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:07:31.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:07:41.094[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:07:51.098[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:08:01.101[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:08:11.103[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:08:21.107[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:08:31.113[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:08:41.120[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:08:51.121[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:08:52.855[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:08:52.856[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:08:52.875[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 11:08:53.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:08:53.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:08:53.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:08:53.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:08:53.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:08:53.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:08:53.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:08:53.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:08:53.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:08:53.895[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:08:53.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:08:53.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:08:53.901[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:08:53.902[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:08:53.909[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 11:08:53.909[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:08:53.909[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:08:53.910[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 11:08:54.039[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:08:54.039[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:08:54.047[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 11:08:57.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:08:57.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:08:57.340[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 11:08:57.364[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 11:08:57.365[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 11:09:01.127[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:09:01.624[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:01.624[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:01.625[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- before set Executor
[36m2024-06-10 11:09:01.626[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- before Loop sArr
[36m2024-06-10 11:09:01.627[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- before Future
[36m2024-06-10 11:09:01.968[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:09:01.968[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:09:01.971[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:09:01.971[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:09:01.971[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:09:02.294[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- IMSI : OK
[36m2024-06-10 11:09:02.296[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- ENB : OK
[36m2024-06-10 11:09:02.297[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- MME : OK
[36m2024-06-10 11:09:02.297[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- SGW : OK
[36m2024-06-10 11:09:02.297[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- PGW : OK
[36m2024-06-10 11:09:11.131[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:09:21.136[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:09:24.125[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:24.125[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:24.214[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 11:09:24.877[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:24.877[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:24.877[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:24.877[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:24.877[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:24.878[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:24.877[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:24.878[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:24.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:24.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:24.877[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:24.884[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:24.898[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:09:24.899[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:09:24.899[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 11:09:24.901[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:24.902[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:24.909[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 11:09:25.004[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:25.004[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:25.005[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 11:09:28.232[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:28.232[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:28.242[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 11:09:28.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 11:09:28.268[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 11:09:31.141[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:09:34.723[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:09:34.723[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:09:34.724[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before set Executor
[36m2024-06-10 11:09:34.724[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before Loop sArr
[36m2024-06-10 11:09:34.725[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before Future
[36m2024-06-10 11:09:34.804[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:09:34.804[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:09:34.805[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:09:34.805[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:09:34.806[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:09:34.914[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- IMSI : OK
[36m2024-06-10 11:09:34.922[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- ENB : OK
[36m2024-06-10 11:09:34.922[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- MME : OK
[36m2024-06-10 11:09:34.922[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- SGW : OK
[36m2024-06-10 11:09:34.922[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- PGW : OK
[36m2024-06-10 11:09:41.144[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:09:51.148[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:10:01.150[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:10:08.564[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:08.564[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:08.575[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 11:10:09.397[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:09.398[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:09.400[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:09.401[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:09.400[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:09.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:09.401[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:09.403[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:09.405[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:09.405[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:09.405[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:09.406[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:09.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:10:09.420[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:10:09.421[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 11:10:09.422[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:09.422[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:09.423[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 11:10:09.584[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:09.584[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:09.585[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 11:10:11.153[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:10:21.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:10:31.163[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:10:40.194[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:40.194[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:40.461[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 11:10:40.484[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 11:10:40.486[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 11:10:41.164[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:10:47.422[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:10:47.423[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:10:47.424[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before set Executor
[36m2024-06-10 11:10:47.424[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before Loop sArr
[36m2024-06-10 11:10:47.426[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before Future
[36m2024-06-10 11:10:47.476[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:10:47.476[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:10:47.476[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:10:47.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:10:47.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:10:47.679[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- IMSI : OK
[36m2024-06-10 11:10:47.679[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- ENB : OK
[36m2024-06-10 11:10:47.679[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- MME : OK
[36m2024-06-10 11:10:47.680[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- SGW : OK
[36m2024-06-10 11:10:47.680[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- PGW : OK
[36m2024-06-10 11:10:51.165[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:11:01.171[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:11:11.174[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:11:21.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:11:31.185[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:11:41.186[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:11:51.192[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:12:01.198[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:12:11.203[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:12:21.209[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:12:31.215[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:12:41.220[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:12:51.224[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:13:01.230[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:13:11.234[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:13:21.240[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:13:30.373[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:13:30.373[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:13:30.373[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:13:30.374[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:13:30.374[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:13:30.374[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:13:30.399[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:13:31.246[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:13:38.121[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:13:38.121[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:13:38.121[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:13:38.121[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:13:38.121[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:13:38.121[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:13:38.300[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:13:41.251[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:13:51.256[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:14:01.261[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:14:11.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:14:21.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:14:23.207[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:14:23.207[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:14:23.208[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:14:23.208[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:14:23.208[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:14:23.208[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:14:23.210[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:14:23.210[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:14:23.590[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:14:23.590[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 11:14:23.639[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 11:14:23.640[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 11:14:31.277[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:14:41.282[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:14:51.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:15:01.294[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:15:11.295[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:15:21.300[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:15:31.302[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:15:41.304[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:15:51.309[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:16:01.313[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:16:11.318[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:16:21.320[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:16:31.321[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:16:41.327[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:16:51.332[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:16:55.947[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:16:55.948[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:16:55.986[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 11:16:56.008[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 11:16:56.010[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 11:17:00.022[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:00.022[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:00.025[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before set Executor
[36m2024-06-10 11:17:00.025[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before Loop sArr
[36m2024-06-10 11:17:00.027[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before Future
[36m2024-06-10 11:17:00.177[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:17:00.177[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:17:00.177[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:17:00.177[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:17:00.177[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:17:00.331[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- IMSI : OK
[36m2024-06-10 11:17:00.336[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- ENB : OK
[36m2024-06-10 11:17:00.336[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- MME : OK
[36m2024-06-10 11:17:00.337[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- SGW : OK
[36m2024-06-10 11:17:00.337[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- PGW : OK
[36m2024-06-10 11:17:01.339[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:17:11.341[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:17:19.162[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:19.162[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:19.176[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 11:17:20.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:20.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:20.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:20.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:20.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:20.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:20.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:20.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:20.060[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:20.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:20.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:20.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:20.086[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:20.086[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:20.249[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 11:17:20.249[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:17:20.250[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:17:20.251[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 11:17:20.316[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:20.317[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:20.318[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 11:17:21.347[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:17:25.933[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:25.933[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:25.940[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 11:17:25.962[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 11:17:25.964[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 11:17:30.029[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:17:30.030[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:17:30.031[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before set Executor
[36m2024-06-10 11:17:30.031[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Loop sArr
[36m2024-06-10 11:17:30.031[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Future
[36m2024-06-10 11:17:30.084[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-11-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_00000901'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:17:30.086[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-11-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_00000901'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:17:30.086[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-11-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_00000901'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:17:30.086[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-11-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_00000901'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:17:30.086[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-11-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_00000901'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 11:17:30.219[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- IMSI : OK
[36m2024-06-10 11:17:30.219[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- ENB : OK
[36m2024-06-10 11:17:30.220[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- MME : OK
[36m2024-06-10 11:17:30.220[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- SGW : OK
[36m2024-06-10 11:17:30.220[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- PGW : OK
[36m2024-06-10 11:17:31.349[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:17:41.355[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:17:51.357[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:18:01.360[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:18:11.365[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:18:21.366[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:18:31.371[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:18:41.375[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:18:51.381[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:19:01.387[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:19:11.390[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:19:21.392[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:19:31.396[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:19:41.399[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:19:51.404[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:20:01.406[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:20:11.411[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:20:21.416[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:20:31.417[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:20:41.419[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:20:51.422[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:21:01.425[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:21:11.430[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:21:21.432[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:21:31.438[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:21:41.443[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:21:51.447[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:22:01.450[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:22:11.452[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:22:21.458[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:22:31.464[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:22:41.470[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:22:51.474[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:23:01.481[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:23:11.484[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:23:21.486[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:23:31.492[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:23:35.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:23:35.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:23:35.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:23:35.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:23:35.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:23:35.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:23:35.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:23:35.344[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:23:35.371[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 11:23:35.372[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 11:23:35.424[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 11:23:35.425[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 11:23:35.425[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 11:23:35.445[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 11:23:35.495[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 11:23:35.537[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 11:23:35.539[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 11:23:41.494[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:23:51.497[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:24:01.502[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:24:11.507[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:24:21.513[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:24:31.518[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:24:41.519[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:24:51.521[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:25:01.526[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:25:11.528[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:25:21.533[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:25:31.536[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:25:41.541[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:25:51.547[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:26:01.552[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:26:11.558[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:26:21.565[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:26:31.570[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:26:41.571[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:26:51.577[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:27:01.582[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:27:11.586[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:27:21.591[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:27:31.597[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:27:41.603[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:27:51.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:28:01.609[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:28:11.615[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:28:21.617[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:28:31.620[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:28:41.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:28:51.633[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:29:01.635[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:29:11.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:29:21.643[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:29:31.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:29:41.654[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:29:51.660[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:30:01.666[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:30:11.667[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:30:21.672[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:30:31.678[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:30:41.682[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:30:51.686[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:31:01.692[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:31:11.696[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:31:21.702[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:31:31.708[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:31:41.709[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:31:51.715[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:32:01.719[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:32:11.724[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:32:21.724[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:32:31.724[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:32:41.723[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:32:51.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:33:01.732[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:33:11.734[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:33:21.738[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:33:31.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:33:41.746[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:33:51.752[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:34:01.758[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:34:11.764[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:34:21.770[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:34:31.777[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:34:41.779[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:34:51.783[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:35:01.788[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:35:11.794[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:35:21.799[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:35:31.805[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:35:41.811[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:35:51.817[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:36:01.823[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:36:11.825[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:36:21.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:36:31.837[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:36:41.844[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:36:51.847[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:37:01.853[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:37:11.856[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:37:21.859[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:37:31.864[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:37:41.870[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:37:51.877[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:38:01.882[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:38:11.888[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:38:21.890[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:38:31.896[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:38:41.902[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:38:51.904[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:39:01.912[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:39:11.918[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:39:21.923[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:39:31.928[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:39:41.935[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:39:51.940[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:40:01.946[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:40:11.950[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:40:21.951[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:40:31.956[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:40:41.958[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:40:51.964[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:41:01.969[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:41:11.971[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:41:21.977[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:41:31.983[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:41:41.988[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:41:51.991[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:42:01.997[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:42:12.002[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:42:22.004[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:42:32.009[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:42:42.015[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:42:52.019[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:43:02.025[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:43:12.031[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:43:22.038[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:43:32.044[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:43:42.045[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:43:52.048[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:44:02.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:44:12.057[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:44:22.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:44:32.062[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:44:42.066[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:44:52.072[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:45:02.077[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:45:12.081[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:45:22.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:45:32.088[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:45:42.094[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:45:52.097[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:46:02.104[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:46:12.107[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:46:22.113[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:46:32.118[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:46:42.124[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:46:52.130[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:47:02.136[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:47:12.142[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:47:22.147[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:47:32.151[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:47:42.154[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:47:52.161[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:48:02.166[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:48:12.167[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:48:22.173[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:48:32.178[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:48:42.183[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:48:52.189[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:49:02.194[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:49:12.200[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:49:22.205[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:49:32.211[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:49:42.217[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:49:52.218[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:50:02.224[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:50:12.226[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:50:22.231[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:50:32.237[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:50:42.242[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:50:52.248[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:51:02.254[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:51:12.259[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:51:22.265[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:51:32.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:51:42.277[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:51:52.283[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:52:02.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:52:12.293[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:52:22.300[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:52:32.304[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:52:42.310[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:52:52.315[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:53:02.321[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:53:12.326[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:53:22.328[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:53:32.330[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:53:42.333[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:53:52.336[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:54:02.342[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:54:12.346[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:54:22.353[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:54:32.358[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:54:42.364[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:54:52.369[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:55:02.375[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:55:12.379[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:55:22.383[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:55:32.388[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:55:42.394[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:55:52.400[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:56:02.402[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:56:12.404[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:56:22.407[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:56:32.413[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:56:42.416[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:56:52.421[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:57:02.427[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:57:12.429[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:57:22.432[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:57:32.435[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:57:42.441[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:57:52.447[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:58:02.452[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:58:12.455[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:58:22.461[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:58:32.466[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:58:42.471[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:58:52.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:59:02.481[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:59:12.486[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:59:22.493[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:59:32.495[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:59:42.499[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 11:59:52.500[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:00:02.505[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:00:12.510[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:00:22.516[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:00:32.522[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:00:42.523[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:00:52.528[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:01:02.534[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:01:12.539[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:01:22.546[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:01:32.552[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:01:42.558[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:01:52.561[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:02:02.566[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:02:12.570[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:02:22.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:02:32.575[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:02:42.580[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:02:52.583[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:03:02.588[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:03:12.593[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:03:22.599[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:03:32.601[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:03:42.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:03:52.607[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:04:02.612[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:04:12.618[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:04:22.621[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:04:32.627[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:04:42.631[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:04:52.634[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:05:02.636[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:05:12.642[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:05:22.647[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:05:32.650[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:05:42.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:05:52.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:06:02.652[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:06:12.656[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:06:22.661[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:06:32.666[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:06:42.672[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:06:52.677[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:07:02.683[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:07:12.688[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:07:22.691[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:07:32.697[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:07:42.703[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:07:52.704[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:08:02.706[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:08:12.708[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:08:22.712[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:08:32.712[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:08:42.718[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:08:52.719[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:09:02.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:09:12.730[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:09:22.735[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:09:32.739[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:09:42.744[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:09:52.748[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:10:02.750[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:10:12.751[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:10:22.755[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:10:32.762[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:10:42.773[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:10:52.783[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:11:02.789[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:11:12.794[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:11:22.804[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:11:32.815[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:11:42.826[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:11:52.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:12:02.838[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:12:12.844[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:12:22.849[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:12:32.858[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:12:42.869[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:12:52.876[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:13:02.882[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:13:12.892[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:13:22.901[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:13:32.910[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:13:42.921[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:13:52.932[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:14:02.942[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:14:12.946[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:14:22.953[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:14:32.955[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:14:42.963[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:14:52.967[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:15:02.974[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:15:12.983[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:15:22.984[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:15:32.986[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:15:42.998[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:15:53.004[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:16:03.014[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:16:13.023[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:16:23.028[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:16:33.039[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:16:43.050[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:16:53.055[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:17:03.066[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:17:13.077[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:17:23.087[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:17:33.099[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:17:43.110[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:17:53.111[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:18:03.115[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:18:13.117[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:18:23.127[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:18:33.138[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:18:43.145[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:18:53.155[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:19:03.165[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:19:13.177[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:19:23.188[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:19:33.198[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:19:43.205[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:19:53.212[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:20:03.222[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:20:13.223[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:20:23.228[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:20:33.235[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:20:43.245[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:20:53.257[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:21:03.264[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:21:13.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:21:23.282[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:21:33.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:21:43.291[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:21:53.299[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:22:03.304[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:22:13.305[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:22:23.310[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:22:33.321[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:22:43.328[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:22:53.330[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:23:03.336[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:23:13.347[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:23:23.353[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:23:33.356[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:23:43.365[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:23:53.373[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:24:03.383[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:24:13.394[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:24:23.400[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:24:33.406[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:24:43.413[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:24:53.419[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:25:03.428[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:25:13.434[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:25:23.442[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:25:33.453[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:25:43.464[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:25:53.472[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:26:03.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:26:13.483[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:26:23.494[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:26:33.502[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:26:43.513[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:26:53.522[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:27:03.533[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:27:13.543[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:27:23.544[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:27:33.554[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:27:43.561[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:27:53.564[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:28:03.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:28:13.583[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:28:23.590[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:28:33.601[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:28:43.605[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:28:53.616[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:29:03.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:29:13.635[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:29:23.645[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:29:33.655[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:29:43.658[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:29:53.669[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:30:03.671[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:30:13.678[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:30:23.682[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:30:33.683[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:30:43.694[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:30:53.703[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:31:03.710[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:31:13.720[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:31:23.723[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:31:33.734[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:31:43.744[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:31:53.746[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:32:03.758[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:32:13.768[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:32:23.776[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:32:33.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:32:43.798[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:32:53.805[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:33:03.815[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:33:13.826[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:33:23.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:33:33.836[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:33:43.845[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:33:53.852[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:34:03.854[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:34:13.865[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:34:23.876[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:34:33.887[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:34:43.897[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:34:53.907[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:35:03.918[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:35:13.924[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:35:23.935[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:35:33.946[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:35:43.957[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:35:53.962[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:36:03.970[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:36:13.976[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:36:23.983[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:36:33.994[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:36:44.002[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:36:54.013[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:37:04.022[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:37:14.029[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:37:24.036[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:37:34.045[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:37:44.056[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:37:54.067[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:38:04.077[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:38:14.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:38:24.093[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:38:34.104[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:38:44.113[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:38:54.115[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:39:04.120[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:39:14.129[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:39:24.128[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:39:34.127[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:39:44.127[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:39:54.137[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:40:04.142[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:40:14.147[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:40:24.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:40:34.159[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:40:44.171[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:40:54.173[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:41:04.178[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:41:14.184[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:41:24.190[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:41:34.197[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:41:44.200[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:41:54.206[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:42:04.211[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:42:14.215[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:42:24.221[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:42:34.222[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:42:44.227[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:42:54.234[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:43:04.239[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:43:14.244[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:43:24.249[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:43:34.256[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:43:44.260[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:43:54.265[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:44:04.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:44:14.271[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:44:24.274[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:44:34.275[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:44:44.278[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:44:54.281[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:45:04.284[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:45:14.290[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:45:24.295[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:45:34.300[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:45:44.305[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:45:54.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:46:04.313[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:46:14.314[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:46:24.316[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:46:34.321[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:46:44.324[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:46:54.329[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:47:04.334[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:47:14.340[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:47:24.342[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:47:34.344[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:47:44.345[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:47:54.351[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:48:04.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:48:14.357[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:48:24.358[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:48:34.364[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:48:44.370[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:48:54.374[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:49:04.378[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:49:14.384[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:49:24.390[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:49:34.396[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:49:44.403[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:49:54.408[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:50:04.410[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:50:14.414[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:50:24.418[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:50:34.424[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:50:44.428[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:50:54.430[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:51:04.436[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:51:14.438[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:51:24.444[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:51:34.447[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:51:44.452[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:51:54.458[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:52:04.459[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:52:14.463[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:52:24.469[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:52:34.470[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:52:44.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:52:54.481[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:53:04.485[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:53:14.490[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:53:24.493[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:53:34.498[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:53:44.503[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:53:54.505[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:54:04.510[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:54:14.513[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:54:24.518[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:54:34.522[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:54:44.523[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:54:54.523[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:55:04.525[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:55:14.530[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:55:24.536[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:55:34.540[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:55:44.545[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:55:54.549[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:56:04.554[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:56:14.556[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:56:24.560[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:56:34.560[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:56:44.563[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:56:54.570[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:57:04.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:57:14.579[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:57:24.581[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:57:34.584[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:57:44.590[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:57:54.596[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:58:04.601[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:58:14.605[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:58:24.611[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:58:34.614[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:58:44.616[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:58:54.618[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:59:04.619[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:59:14.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:59:24.631[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:59:34.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:59:44.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 12:59:54.639[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:00:04.642[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:00:14.647[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:00:24.652[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:00:34.657[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:00:44.663[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:00:54.668[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:01:04.669[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:01:14.676[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:01:24.682[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:01:34.687[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:01:44.693[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:01:50.793[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 13:01:50.841[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 13:01:50.860[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 13:01:50.869[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 13:01:50.881[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 13:01:50.933[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:50.933[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:50.936[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 13:01:51.084[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:51.084[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:51.132[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:51.132[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:51.133[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 13:01:51.483[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:51.483[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:51.483[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:51.483[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:51.488[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:01:51.494[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:51.494[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:51.495[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:51.495[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:51.505[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:51.505[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:51.505[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:51.506[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:51.506[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 13:01:51.508[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:01:51.523[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:51.523[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:51.524[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 13:01:51.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:51.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:51.606[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 13:01:54.704[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:01:57.820[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:01:57.820[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:01:57.830[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:01:57.879[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:01:57.881[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:02:04.710[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:02:14.711[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:02:24.718[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:02:34.722[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:02:44.726[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:02:50.169[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:02:50.170[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:02:50.180[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:02:50.199[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:02:50.202[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:02:54.731[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:03:04.738[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:03:14.740[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:03:24.745[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:03:34.751[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:03:44.753[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:03:54.757[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:03:57.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:03:57.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:03:57.188[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:03:57.188[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:03:57.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:03:57.189[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:03:57.190[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:03:57.190[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:03:57.198[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:03:57.200[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:03:57.225[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:03:57.238[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:03:57.247[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:03:57.247[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:03:57.248[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:03:57.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:03:57.267[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:04:03.004[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:04:03.005[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:04:03.022[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:04:03.042[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:04:03.043[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:04:04.761[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:04:06.573[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:04:06.573[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:04:06.606[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:04:06.630[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:04:06.631[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:04:14.765[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:04:24.769[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:04:34.772[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:04:44.774[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:04:54.776[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:04:58.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:04:58.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:04:58.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:04:58.075[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:04:58.075[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:04:58.075[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:04:58.075[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:04:58.076[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:04:58.110[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:04:58.110[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:04:58.136[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:04:58.138[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:04:58.145[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:04:58.145[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:04:58.146[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:04:58.169[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:04:58.170[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:05:00.667[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:05:00.667[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:05:00.799[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:05:00.820[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:05:00.821[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:05:02.646[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:05:02.647[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:05:02.725[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:05:02.743[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:05:02.744[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:05:04.782[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:05:04.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:05:04.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:05:04.908[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:05:04.927[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:05:04.928[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:05:06.255[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:05:06.255[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:05:06.373[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:05:06.396[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:05:06.399[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:05:14.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:05:24.788[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:05:34.790[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:05:38.441[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:05:38.441[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:05:38.441[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:05:38.441[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:05:38.442[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:05:38.442[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:05:38.442[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:05:38.442[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:05:38.452[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:05:38.453[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:05:38.464[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:05:38.464[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:05:38.466[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:05:38.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:05:38.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:05:38.494[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:05:38.494[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:05:44.795[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:05:54.798[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:06:04.804[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:06:14.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:14.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:14.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:14.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:14.720[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:14.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:14.720[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:14.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:14.735[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:06:14.735[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:14.777[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:14.786[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:14.799[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:14.799[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:14.800[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:14.809[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:06:14.933[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:14.934[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:17.485[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:17.486[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:17.505[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:17.526[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:17.527[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:19.493[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:19.493[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:19.503[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0012'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:19.540[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:19.540[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0012'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:20.664[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:20.664[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:20.673[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:20.879[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:20.880[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:21.941[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:21.941[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:21.951[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:22.002[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:22.003[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:24.323[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:24.325[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:24.378[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:24.396[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:24.397[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:24.813[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:06:26.931[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:26.932[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:26.961[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 13:06:27.883[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:27.883[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:27.883[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:27.883[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:27.883[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:27.883[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:27.884[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:27.884[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:27.889[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:27.889[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:27.892[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:06:27.897[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:06:27.904[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 13:06:27.907[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:27.907[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:27.923[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:27.923[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:27.924[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 13:06:28.028[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:28.028[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:28.030[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 13:06:34.817[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:06:38.133[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:38.133[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:38.343[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:38.365[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:38.367[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:44.822[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:06:51.699[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:51.702[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:51.702[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:51.699[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:51.703[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:51.703[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:51.706[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:51.707[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:51.748[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:51.749[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:51.775[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:51.775[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:06:51.775[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:51.806[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:51.809[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:51.811[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:51.813[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:53.849[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:53.849[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:53.871[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:06:53.894[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:06:53.896[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:06:54.823[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:06:57.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:57.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:57.185[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 13:06:58.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:58.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:58.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:58.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:58.051[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:58.051[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:58.051[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:58.049[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:58.051[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:58.051[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:58.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:58.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:58.067[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:06:58.068[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:06:58.068[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 13:06:58.088[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:58.089[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:58.090[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 13:06:58.211[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:06:58.211[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:06:58.212[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 13:07:04.827[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:07:07.162[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:07:07.163[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:07:07.162[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:07:07.164[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:07:07.164[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:07:07.164[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:07:07.175[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:07:10.927[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:07:10.927[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:07:10.941[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:07:10.975[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:07:10.977[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:07:12.432[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:07:12.432[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:07:12.442[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:07:12.479[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:07:12.480[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:07:14.829[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:07:15.387[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:07:15.389[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:07:15.399[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:07:15.422[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:07:15.423[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:07:24.834[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:07:34.835[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:07:44.838[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:07:46.527[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:07:46.527[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:07:46.537[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:07:46.579[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:07:46.581[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:07:49.505[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:07:49.505[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:07:49.506[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before set Executor
[36m2024-06-10 13:07:49.506[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before Loop sArr
[36m2024-06-10 13:07:49.507[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before Future
[36m2024-06-10 13:07:49.557[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-12-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:07:49.557[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-12-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:07:49.558[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-12-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:07:49.557[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-12-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:07:49.561[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-12-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:07:50.008[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- IMSI : OK
[36m2024-06-10 13:07:50.008[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- ENB : OK
[36m2024-06-10 13:07:50.008[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- MME : OK
[36m2024-06-10 13:07:50.009[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- SGW : OK
[36m2024-06-10 13:07:50.010[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- PGW : OK
[36m2024-06-10 13:07:54.844[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:08:04.850[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:08:14.851[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:08:24.857[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:08:34.857[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:08:44.861[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:08:54.864[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:09:04.869[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:09:14.872[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:09:24.878[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:09:34.880[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:09:44.885[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:09:51.693[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:09:51.693[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:09:51.710[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:09:51.710[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:09:54.890[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:10:04.894[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:10:14.897[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:10:24.902[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:10:34.906[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:10:44.911[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:10:54.912[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:11:04.918[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:11:14.923[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:11:24.929[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:11:34.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:11:44.932[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:11:54.935[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:12:04.940[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:12:14.947[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:12:17.386[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:12:17.387[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:12:17.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:12:17.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:12:22.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:12:22.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:12:22.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:12:22.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:12:24.952[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:12:34.953[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:12:44.957[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:12:54.960[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:13:04.966[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:13:14.978[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:13:24.990[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:13:34.999[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:13:35.698[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:13:35.699[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:13:35.749[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 13:13:36.810[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:13:36.811[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:13:36.810[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:13:36.811[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:13:36.811[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:13:36.812[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:13:36.813[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:13:36.813[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:13:36.814[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:13:36.814[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:13:36.816[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:13:36.816[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:13:36.820[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:13:36.823[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:13:36.823[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:13:36.823[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:13:36.826[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 13:13:36.833[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 13:13:36.961[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:13:36.961[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:13:36.962[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 13:13:45.003[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:13:55.009[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:14:05.015[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:14:15.017[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:14:25.019[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:14:33.730[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:14:33.731[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:14:33.759[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:14:33.782[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:14:33.783[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:14:35.024[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:14:39.508[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:14:39.509[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:14:39.510[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before set Executor
[36m2024-06-10 13:14:39.510[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before Loop sArr
[36m2024-06-10 13:14:39.511[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before Future
[36m2024-06-10 13:14:39.564[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-13-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:14:39.591[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-13-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:14:39.591[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-13-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:14:39.592[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-13-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:14:39.592[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-13-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:14:40.057[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- IMSI : OK
[36m2024-06-10 13:14:40.059[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- ENB : OK
[36m2024-06-10 13:14:40.060[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- MME : OK
[36m2024-06-10 13:14:40.060[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- SGW : OK
[36m2024-06-10 13:14:40.060[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- PGW : OK
[36m2024-06-10 13:14:41.439[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:14:41.439[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:14:41.444[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:14:41.444[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:14:45.030[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:14:55.035[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:15:05.039[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:15:15.041[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:15:25.043[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:15:35.048[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:15:45.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:15:55.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:16:05.067[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:16:15.073[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:16:25.076[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:16:35.082[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:16:45.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:16:55.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:17:05.092[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:17:15.094[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:17:25.097[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:17:35.099[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:17:45.103[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:17:55.108[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:18:05.112[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:18:15.117[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:18:25.123[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:18:35.129[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:18:45.134[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:18:55.139[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:19:05.144[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:19:15.150[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:19:25.155[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:19:35.159[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:19:45.162[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:19:55.166[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:20:05.177[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:20:15.180[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:20:25.185[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:20:35.191[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:20:45.196[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:20:55.197[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:21:05.201[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:21:15.202[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:21:25.208[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:21:35.213[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:21:45.215[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:21:55.217[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:22:05.223[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:22:15.228[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:22:25.234[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:22:35.238[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:22:45.243[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:22:55.249[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:23:05.251[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:23:15.255[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:23:25.260[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:23:35.262[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:23:45.267[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:23:55.270[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:24:05.275[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:24:15.279[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:24:25.285[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:24:35.289[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:24:45.294[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:24:55.299[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:25:05.305[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:25:15.307[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:25:25.314[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:25:35.320[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:25:45.323[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:25:55.325[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:26:05.330[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:26:15.334[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:26:25.340[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:26:35.344[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:26:45.345[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:26:55.350[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:27:05.356[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:27:15.357[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:27:25.362[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:27:35.368[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:27:45.370[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:27:55.373[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:28:05.376[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:28:15.378[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:28:25.383[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:28:35.388[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:28:45.393[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:28:55.398[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:29:05.400[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:29:15.401[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:29:25.404[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:29:35.409[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:29:45.414[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:29:55.419[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:30:05.425[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:30:15.429[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:30:25.432[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:30:35.437[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:30:45.444[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:30:55.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:31:05.454[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:31:15.459[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:31:25.461[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:31:35.467[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:31:45.471[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:31:55.474[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:32:05.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:32:15.481[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:32:25.486[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:32:35.487[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:32:45.490[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:32:55.491[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:33:05.497[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:33:15.502[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:33:25.508[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:33:35.510[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:33:45.515[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:33:55.520[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:34:05.525[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:34:15.526[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:34:25.532[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:34:35.538[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:34:45.543[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:34:55.548[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:35:05.553[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:35:15.559[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:35:25.559[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:35:35.565[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:35:45.571[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:35:55.575[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:36:05.579[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:36:15.585[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:36:25.590[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:36:35.596[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:36:45.600[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:36:55.601[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:37:05.607[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:37:15.610[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:37:25.615[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:37:35.621[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:37:45.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:37:55.628[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:38:05.633[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:38:15.639[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:38:25.642[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:38:35.648[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:38:45.651[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:38:55.656[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:39:05.661[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:39:15.666[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:39:25.672[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:39:35.672[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:39:45.678[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:39:55.680[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:40:05.686[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:40:15.691[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:40:25.693[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:40:35.700[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:40:45.704[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:40:55.709[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:41:05.711[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:41:15.711[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:41:25.717[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:41:35.721[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:41:45.724[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:41:55.727[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:42:05.733[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:42:15.734[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:42:25.740[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:42:35.741[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:42:45.746[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:42:55.750[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:43:05.752[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:43:15.754[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:43:25.757[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:43:35.762[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:43:45.764[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:43:55.767[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:44:05.770[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:44:15.773[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:44:25.775[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:44:35.781[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:44:45.782[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:44:55.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:45:05.793[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:45:15.800[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:45:25.803[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:45:35.808[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:45:45.818[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:45:55.822[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:46:05.825[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:46:07.686[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 13:46:07.984[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 13:46:07.996[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 13:46:08.008[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 13:46:08.023[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 13:46:08.078[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.078[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.083[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 13:46:08.228[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.228[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.258[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.258[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.259[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 13:46:08.611[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.612[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.613[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:46:08.611[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.614[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.614[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.614[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.615[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.615[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.617[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.617[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.620[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.620[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.632[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.632[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.633[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 13:46:08.632[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 13:46:08.634[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 13:46:08.724[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:08.724[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:08.725[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 13:46:12.023[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:12.024[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:12.145[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 13:46:12.168[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 13:46:12.169[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 13:46:15.828[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:46:16.733[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:16.733[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:16.734[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before set Executor
[36m2024-06-10 13:46:16.734[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before Loop sArr
[36m2024-06-10 13:46:16.735[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before Future
[36m2024-06-10 13:46:16.844[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-14-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:46:16.844[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-14-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:46:16.870[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-14-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:46:16.870[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-14-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:46:16.870[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-14-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_04000087'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'PAGING'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 13:46:17.000[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- IMSI : OK
[36m2024-06-10 13:46:17.016[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- ENB : OK
[36m2024-06-10 13:46:17.016[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- MME : OK
[36m2024-06-10 13:46:17.016[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- SGW : OK
[36m2024-06-10 13:46:17.017[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- PGW : OK
[36m2024-06-10 13:46:18.249[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:18.249[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:18.253[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 13:46:18.255[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 13:46:25.834[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:46:35.837[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:46:45.843[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:46:55.846[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:47:05.852[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:47:15.857[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:47:25.860[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:47:35.866[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:47:45.867[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:47:55.870[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:48:05.875[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:48:15.879[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:48:25.884[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:48:35.888[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:48:45.891[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:48:55.893[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:49:05.897[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:49:15.902[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:49:25.906[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:49:35.908[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:49:45.909[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:49:55.915[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:50:05.919[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:50:15.925[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:50:25.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:50:35.935[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:50:45.941[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:50:55.944[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:51:05.946[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:51:15.951[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:51:25.954[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:51:35.955[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:51:45.958[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:51:55.964[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:52:05.970[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:52:15.974[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:52:25.980[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:52:35.983[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:52:45.987[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:52:55.992[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:53:05.995[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:53:16.001[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:53:26.004[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:53:36.006[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:53:46.007[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:53:56.008[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:54:06.013[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:54:16.017[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:54:26.018[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:54:36.020[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:54:46.024[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:54:56.029[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:55:06.030[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:55:16.033[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:55:26.037[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:55:36.040[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:55:46.041[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:55:56.041[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:56:06.045[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:56:16.048[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:56:26.053[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:56:36.058[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:56:46.059[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:56:56.061[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:57:06.065[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:57:16.066[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:57:26.067[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:57:36.072[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:57:46.078[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:57:56.081[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:58:06.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:58:16.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:58:26.096[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:58:36.101[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:58:46.105[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:58:56.107[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:59:06.112[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:59:16.118[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:59:26.123[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:59:36.124[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:59:46.125[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 13:59:56.127[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:00:06.133[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:00:16.137[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:00:26.142[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:00:36.148[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:00:46.149[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:00:56.153[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:01:06.156[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:01:16.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:01:26.163[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:01:36.164[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:01:46.165[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:01:56.170[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:02:06.175[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:02:16.176[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:02:26.181[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:02:36.186[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:02:46.192[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:02:56.193[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:03:06.196[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:03:16.204[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:03:26.211[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:03:36.217[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:03:46.223[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:03:56.228[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:04:06.229[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:04:16.232[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:04:26.238[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:04:36.239[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:04:46.241[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:04:56.244[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:05:06.248[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:05:16.253[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:05:26.258[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:05:36.262[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:05:46.267[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:05:56.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:06:06.277[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:06:16.283[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:06:26.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:06:36.290[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:06:46.295[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:06:56.300[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:07:06.306[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:07:16.306[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:07:26.312[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:07:36.317[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:07:46.318[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:07:56.324[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:08:06.327[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:08:16.333[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:08:26.333[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:08:36.339[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:08:46.344[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:08:56.345[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:09:06.347[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:09:16.352[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:09:26.353[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:09:36.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:09:46.358[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:09:56.363[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:10:06.369[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:10:16.370[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:10:26.376[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:10:36.379[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:10:46.381[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:10:56.386[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:11:06.392[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:11:16.397[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:11:26.398[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:11:36.401[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:11:46.407[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:11:56.412[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:12:06.413[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:12:16.419[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:12:26.424[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:12:36.430[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:12:46.431[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:12:56.435[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:13:06.441[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:13:16.443[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:13:26.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:13:36.455[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:13:46.460[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:13:56.465[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:14:06.471[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:14:16.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:14:26.481[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:14:36.483[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:14:46.489[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:14:56.495[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:15:06.499[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:15:16.504[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:15:26.505[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:15:36.509[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:15:46.509[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:15:56.516[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:16:06.517[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:16:16.522[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:16:26.526[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:16:36.528[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:16:46.533[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:16:56.540[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:17:06.542[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:17:16.545[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:17:26.550[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:17:36.553[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:17:46.558[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:17:56.564[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:18:06.569[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:18:16.573[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:18:26.579[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:18:36.584[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:18:46.590[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:18:56.595[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:19:06.600[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:19:16.601[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:19:26.602[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:19:36.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:19:46.611[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:19:56.617[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:20:06.620[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:20:16.622[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:20:26.625[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:20:36.627[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:20:46.633[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:20:56.638[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:21:06.643[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:21:16.648[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:21:26.654[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:21:36.659[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:21:46.664[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:21:56.669[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:22:06.672[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:22:16.678[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:22:26.683[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:22:36.685[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:22:46.689[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:22:56.694[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:23:06.698[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:23:16.699[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:23:26.703[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:23:36.709[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:23:46.712[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:23:56.717[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:24:06.719[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:24:16.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:24:26.730[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:24:36.734[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:24:46.738[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:24:56.739[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:25:06.741[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:25:16.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:25:26.748[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:25:36.754[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:25:46.758[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:25:56.762[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:26:06.768[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:26:16.772[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:26:26.775[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:26:36.779[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:26:46.784[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:26:56.790[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:27:06.795[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:27:16.797[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:27:26.799[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:27:36.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:27:46.806[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:27:56.811[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:28:06.816[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:28:16.818[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:28:26.824[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:28:36.829[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:28:46.830[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:28:56.833[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:29:06.838[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:29:16.844[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:29:26.849[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:29:36.854[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:29:46.856[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:29:56.862[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:30:06.866[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:30:16.866[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:30:26.872[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:30:36.876[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:30:46.882[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:30:56.883[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:31:06.888[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:31:16.894[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:31:26.900[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:31:36.906[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:31:46.911[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:31:56.912[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:32:06.917[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:32:16.919[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:32:26.923[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:32:36.929[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:32:46.940[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:32:56.948[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:33:06.953[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:33:16.964[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:33:26.971[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:33:36.981[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:33:46.983[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:33:56.991[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:34:07.000[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:34:17.007[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:34:27.013[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:34:37.014[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:34:47.016[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:34:57.031[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:35:03.751[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 14:35:03.774[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 14:35:03.790[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 14:35:03.802[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 14:35:03.813[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 14:35:03.871[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:03.871[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:03.873[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 14:35:04.181[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:04.181[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:04.212[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:04.212[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:04.214[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 14:35:04.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:04.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:04.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:04.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:04.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:04.482[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:04.482[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 14:35:04.510[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:04.511[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:04.511[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:04.511[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:04.511[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:04.511[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:04.513[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:04.514[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:04.592[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 14:35:04.592[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 14:35:04.592[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 14:35:04.673[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 14:35:04.677[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 14:35:04.678[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 14:35:07.038[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:35:17.043[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:35:27.046[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:35:37.051[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:35:47.053[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:35:57.055[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:36:07.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:36:17.063[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:36:27.068[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:36:37.074[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:36:47.065[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:36:57.055[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:37:07.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:37:17.052[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:37:27.053[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:37:37.056[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:37:47.062[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:37:57.062[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:38:07.069[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:38:17.073[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:38:27.078[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:38:37.082[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:38:47.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:38:57.088[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:39:07.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:39:17.096[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:39:27.100[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:39:37.104[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:39:47.109[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:39:57.114[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:40:07.120[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:40:17.122[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:40:27.124[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:40:37.129[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:40:47.131[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:40:57.134[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:41:07.138[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:41:17.141[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:41:27.146[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:41:37.152[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:41:47.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:41:57.162[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:42:07.167[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:42:17.173[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:42:27.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:42:37.183[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:42:47.187[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:42:57.191[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:43:07.193[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:43:17.197[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:43:27.203[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:43:37.205[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:43:47.210[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:43:57.216[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:44:07.221[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:44:17.227[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:44:27.230[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:44:37.235[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:44:47.240[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:44:57.241[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:45:07.243[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:45:17.249[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:45:27.252[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:45:37.260[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:45:47.261[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:45:57.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:46:07.273[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:46:17.278[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:46:27.283[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:46:37.284[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:46:47.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:46:57.290[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:47:07.295[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:47:17.301[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:47:27.306[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:47:37.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:47:47.312[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:47:57.317[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:48:07.322[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:48:17.328[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:48:27.333[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:48:37.337[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:48:47.343[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:48:57.346[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:49:07.351[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:49:17.357[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:49:27.361[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:49:37.363[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:49:47.368[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:49:57.373[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:50:07.380[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:50:17.380[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:50:27.386[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:50:37.391[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:50:47.395[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:50:57.397[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:51:07.397[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:51:17.404[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:51:27.409[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:51:37.410[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:51:47.415[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:51:57.416[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:52:07.422[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:52:17.425[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:52:27.430[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:52:37.431[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:52:47.436[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:52:57.441[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:53:07.447[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:53:17.449[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:53:27.453[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:53:37.455[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:53:47.460[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:53:57.466[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:54:07.469[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:54:17.471[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:54:27.476[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:54:37.480[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:54:47.485[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:54:57.488[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:55:07.493[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:55:17.498[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:55:27.503[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:55:37.508[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:55:47.510[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:55:57.511[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:56:07.513[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:56:17.518[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:56:27.519[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:56:37.525[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:56:47.530[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:56:57.535[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:57:07.541[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:57:17.546[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:57:27.551[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:57:37.555[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:57:47.557[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:57:57.560[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:58:07.560[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:58:17.562[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:58:27.566[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:58:37.571[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:58:47.577[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:58:57.582[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:59:07.587[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:59:17.593[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:59:27.594[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:59:37.599[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:59:47.604[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 14:59:57.608[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:00:07.613[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:00:17.617[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:00:27.622[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:00:37.624[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:00:47.629[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:00:57.633[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:01:07.639[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:01:17.644[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:01:27.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:01:37.654[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:01:47.659[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:01:57.664[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:02:07.666[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:02:17.667[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:02:27.674[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:02:37.679[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:02:47.680[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:02:57.683[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:03:07.689[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:03:17.695[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:03:27.698[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:03:37.704[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:03:47.705[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:03:57.711[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:04:07.717[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:04:17.718[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:04:27.723[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:04:37.726[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:04:47.731[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:04:57.736[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:05:07.741[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:05:17.746[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:05:27.748[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:05:37.753[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:05:47.755[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:05:57.760[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:06:07.763[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:06:17.764[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:06:27.765[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:06:37.766[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:06:47.769[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:06:57.770[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:07:07.771[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:07:17.775[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:07:27.780[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:07:37.784[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:07:47.789[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:07:57.794[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:08:07.797[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:08:17.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:08:27.808[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:08:37.813[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:08:47.815[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:08:57.816[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:09:07.821[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:09:17.829[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:09:27.835[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:09:37.837[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:09:47.842[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:09:57.848[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:10:07.853[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:10:17.854[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:10:27.859[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:10:37.864[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:10:47.868[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:10:57.871[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:11:07.926[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:11:17.931[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:11:27.937[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:11:37.943[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:11:47.949[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:11:57.952[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:12:07.957[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:12:17.958[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:12:27.963[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:12:37.969[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:12:47.972[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:12:57.976[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:13:07.978[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:13:17.983[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:13:27.984[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:13:37.987[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:13:47.992[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:13:57.997[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:14:08.003[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:14:18.005[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:14:28.006[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:14:38.008[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:14:48.009[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:14:58.012[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:15:08.013[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:15:18.018[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:15:28.024[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:15:38.026[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:15:48.032[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:15:58.037[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:16:08.041[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:16:18.046[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:16:28.048[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:16:38.053[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:16:48.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:16:58.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:17:08.061[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:17:18.064[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:17:28.069[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:17:38.072[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:17:48.074[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:17:58.080[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:18:08.082[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:18:18.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:18:28.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:18:38.096[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:18:48.102[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:18:58.108[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:19:08.111[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:19:18.116[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:19:28.120[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:19:38.124[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:19:48.128[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:19:58.129[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:20:08.135[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:20:18.142[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:20:28.147[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:20:38.153[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:20:48.158[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:20:58.163[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:21:08.167[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:21:18.174[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:21:28.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:21:38.181[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:21:48.184[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:21:58.190[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:22:08.192[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:22:18.197[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:22:28.201[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:22:38.206[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:22:48.212[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:22:58.215[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:23:08.216[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:23:18.221[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:23:28.225[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:23:38.231[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:23:48.235[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:23:58.238[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:24:08.240[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:24:18.246[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:24:28.250[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:24:38.255[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:24:48.261[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:24:58.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:25:08.269[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:25:18.174[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 15:25:18.175[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-06-10 15:25:18.217[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-06-10 15:25:25.143[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 72759 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-06-10 15:25:25.146[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-10 15:25:25.146[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-10 15:25:25.494[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-10 15:25:25.546[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 46 ms. Found 1 JPA repository interfaces.
[36m2024-06-10 15:25:25.708[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-10 15:25:26.149[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-10 15:25:26.155[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 15:25:26.156[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-10 15:25:26.156[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-10 15:25:26.222[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-10 15:25:26.222[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1054 ms
[36m2024-06-10 15:25:26.326[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-10 15:25:26.366[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-10 15:25:26.476[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-10 15:25:26.594[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-10 15:25:26.939[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-10 15:25:26.985[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-10 15:25:27.376[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-10 15:25:27.382[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 15:25:27.892[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-10 15:25:27.994[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 15:25:27.994[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 15:25:27.994[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 15:25:27.995[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 15:25:28.084[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5ad13be4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e93f91d, org.springframework.security.web.context.SecurityContextPersistenceFilter@153cf928, org.springframework.security.web.header.HeaderWriterFilter@67201002, org.springframework.security.web.authentication.logout.LogoutFilter@125c03d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53cba89f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66ad7167, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1a899fcd, org.springframework.security.web.session.SessionManagementFilter@1f7853af, org.springframework.security.web.access.ExceptionTranslationFilter@1ae2028d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3aae9e8f]
[36m2024-06-10 15:25:28.140[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-10 15:25:28.430[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 15:25:28.449[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-10 15:25:28.456[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.743 seconds (JVM running for 4.381)
[36m2024-06-10 15:25:29.356[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-10 15:25:29.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-10 15:25:29.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-10 15:25:29.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-10 15:25:29.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:25:39.643[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:25:49.648[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:25:59.652[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:26:07.013[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-06-10 15:26:07.014[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-06-10 15:26:07.015[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-06-10 15:26:07.301[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 15:26:07.311[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 15:26:07.324[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 15:26:07.364[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 15:26:07.373[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 15:26:07.418[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:07.418[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:07.447[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 15:26:07.587[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:07.588[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:07.616[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:07.617[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:07.623[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 15:26:07.982[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:07.982[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:07.986[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:07.986[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:07.986[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:07.987[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:07.987[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:07.986[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:07.991[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:07.992[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:08.007[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:08.008[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:08.025[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 15:26:08.026[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 15:26:08.027[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 15:26:08.043[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:08.043[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:08.051[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 15:26:08.141[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:08.141[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:08.143[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 15:26:09.658[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:26:11.922[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:11.923[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:11.957[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 15:26:12.004[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 15:26:12.007[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 15:26:15.731[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:15.731[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:15.738[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before set Executor
[36m2024-06-10 15:26:15.738[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Loop sArr
[36m2024-06-10 15:26:15.741[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Future
[36m2024-06-10 15:26:15.821[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000900'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 15:26:15.821[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000900'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 15:26:15.821[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000900'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 15:26:15.823[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000900'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 15:26:15.922[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000900'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 15:26:16.281[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- IMSI : OK
[36m2024-06-10 15:26:16.281[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- ENB : OK
[36m2024-06-10 15:26:16.282[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- MME : OK
[36m2024-06-10 15:26:16.282[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- SGW : OK
[36m2024-06-10 15:26:16.282[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- PGW : OK
[36m2024-06-10 15:26:17.316[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 15:26:17.317[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 15:26:17.351[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0Gj93e5ZP91B0y1n+Y7rPGA=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0Gj93e5ZP91B0y1n+Y7rPGA=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 15:26:19.662[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:26:29.667[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:26:39.668[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:26:49.675[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:26:59.680[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:27:09.685[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:27:19.690[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:27:29.696[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:27:39.702[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:27:49.706[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:27:59.708[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:28:09.714[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:28:19.720[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:28:29.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:28:39.729[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:28:49.736[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:28:59.740[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:29:09.743[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:29:19.746[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:29:29.747[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:29:39.753[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:29:49.754[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:29:59.760[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:30:09.766[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:30:19.772[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:30:29.774[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:30:39.780[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:30:49.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:30:59.790[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:31:09.794[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:31:19.801[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:31:29.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:31:39.808[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:31:49.814[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:31:59.817[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:32:09.821[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:32:19.829[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:32:29.835[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:32:39.840[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:32:49.842[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:32:59.846[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:33:09.852[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:33:19.853[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:33:29.857[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:33:39.859[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:33:49.862[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:33:59.866[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:34:09.873[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:34:19.875[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:34:29.876[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:34:39.878[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:34:49.884[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:34:59.889[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:35:09.892[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:35:19.897[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:35:29.903[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:35:39.910[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:35:49.915[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:35:59.919[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:36:09.925[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:36:19.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:36:29.935[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:36:39.939[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:36:49.941[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:36:59.947[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:37:09.952[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:37:19.957[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:37:29.962[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:37:39.966[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:37:49.973[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:37:59.979[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:38:09.983[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:38:19.984[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:38:29.990[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:38:39.994[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:38:50.000[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:39:00.004[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:39:10.011[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:39:20.013[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:39:30.019[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:39:40.021[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:39:50.025[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:40:00.026[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:40:10.032[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:40:20.034[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:40:30.039[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:40:40.043[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:40:50.049[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:41:00.055[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:41:10.056[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:41:20.061[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:41:30.063[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:41:40.069[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:41:50.075[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:42:00.081[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:42:10.084[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:42:20.088[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:42:30.094[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:42:40.097[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:42:50.104[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:43:00.105[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:43:10.107[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:43:20.113[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:43:30.117[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:43:40.120[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:43:50.122[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:44:00.127[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:44:10.133[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:44:20.139[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:44:30.145[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:44:40.150[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:44:50.154[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:45:00.155[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:45:10.159[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:45:20.161[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:45:30.164[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:45:40.167[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:45:50.172[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:46:00.177[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:46:10.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:46:20.185[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:46:30.191[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:46:40.197[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:46:50.202[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:47:00.207[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:47:10.213[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:47:20.219[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:47:30.222[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:47:40.227[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:47:50.231[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:48:00.232[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:48:10.238[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:48:20.241[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:48:30.247[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:48:40.251[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:48:50.255[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:49:00.259[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:49:10.264[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:49:20.268[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:49:30.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:49:40.274[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:49:50.280[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:50:00.285[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:50:10.290[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:50:20.291[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:50:30.293[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:50:40.295[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:50:50.300[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:51:00.305[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:51:10.308[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:51:20.310[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:51:30.315[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:51:40.318[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:51:50.322[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:52:00.324[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:52:10.330[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:52:20.335[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:52:30.337[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:52:40.338[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:52:50.344[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:53:00.346[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:53:10.351[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:53:20.355[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:53:30.361[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:53:40.365[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:53:50.369[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:54:00.374[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:54:10.378[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:54:20.382[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:54:30.384[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:54:40.387[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:54:50.392[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:55:00.394[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:55:10.400[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:55:20.406[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:55:30.410[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:55:40.411[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:55:50.418[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:56:00.423[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:56:10.428[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:56:20.430[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:56:30.432[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:56:40.436[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:56:50.437[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:57:00.440[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:57:10.445[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:57:20.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:57:30.450[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:57:40.456[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:57:50.461[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:58:00.466[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:58:10.468[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:58:20.471[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:58:30.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:58:40.479[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:58:50.483[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:59:00.488[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:59:10.494[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:59:20.496[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:59:30.502[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:59:40.505[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 15:59:50.507[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:00:00.510[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:00:10.516[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:00:20.519[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:00:30.525[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:00:40.531[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:00:50.537[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:01:00.539[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:01:10.543[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:01:20.545[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:01:30.547[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:01:40.553[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:01:50.559[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:02:00.564[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:02:10.570[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:02:20.575[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:02:30.581[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:02:40.587[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:02:50.592[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:03:00.593[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:03:10.595[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:03:20.601[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:03:30.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:03:40.612[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:03:50.618[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:04:00.624[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:04:10.627[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:04:20.630[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:04:30.631[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:04:40.634[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:04:50.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:05:00.644[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:05:10.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:05:20.655[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:05:30.660[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:05:40.665[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:05:50.668[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:06:00.672[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:06:10.677[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:06:20.680[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:06:30.686[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:06:40.690[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:06:50.696[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:07:00.699[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:07:10.704[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:07:20.706[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:07:30.709[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:07:40.714[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:07:50.720[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:08:00.722[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:08:10.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:08:20.732[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:08:30.740[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:08:40.744[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:08:50.749[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:09:00.750[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:09:10.757[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:09:20.761[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:09:30.767[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:09:40.772[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:09:50.777[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:10:00.782[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:10:10.788[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:10:20.791[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:10:23.951[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 16:10:23.961[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 16:10:23.986[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 16:10:23.997[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 16:10:24.008[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 16:10:24.048[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.048[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.050[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 16:10:24.192[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.192[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.226[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.227[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.228[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 16:10:24.539[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.544[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.540[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.547[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.548[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 16:10:24.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.553[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.553[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.560[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.560[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.563[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 16:10:24.572[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 16:10:24.572[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 16:10:24.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:24.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:24.650[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 16:10:27.702[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:27.702[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:27.717[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 16:10:27.783[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 16:10:27.785[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 16:10:30.796[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:10:40.798[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:10:41.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:41.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:41.077[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before set Executor
[36m2024-06-10 16:10:41.077[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before Loop sArr
[36m2024-06-10 16:10:41.078[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before Future
[36m2024-06-10 16:10:41.137[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 16:10:41.139[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 16:10:41.140[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 16:10:41.141[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 16:10:41.142[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 16:10:41.519[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- IMSI : OK
[36m2024-06-10 16:10:41.520[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- ENB : OK
[36m2024-06-10 16:10:41.521[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- MME : OK
[36m2024-06-10 16:10:41.522[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- SGW : OK
[36m2024-06-10 16:10:41.522[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- PGW : OK
[36m2024-06-10 16:10:43.044[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:10:43.045[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:10:43.085[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'O00AWvCMxFtFQhOaf4Dqau7A=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'O00AWvCMxFtFQhOaf4Dqau7A=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 16:10:50.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:11:00.809[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:11:10.813[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:11:20.819[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:11:30.825[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:11:40.829[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:11:50.832[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:12:00.837[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:12:10.842[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:12:20.847[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:12:30.854[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:12:40.858[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:12:50.864[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:13:00.868[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:13:10.873[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:13:20.876[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:13:30.883[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:13:40.885[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:13:50.891[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:14:00.895[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:14:10.899[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:14:20.903[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:14:30.908[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:14:40.914[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:14:50.916[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:15:00.922[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:15:10.927[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:15:20.933[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:15:30.939[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:15:40.942[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:15:50.944[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:16:00.946[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:16:10.951[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:16:20.953[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:16:30.958[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:16:40.961[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:16:50.963[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:17:00.966[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:17:10.972[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:17:20.974[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:17:30.978[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:17:40.981[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:17:50.982[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:18:00.984[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:18:10.987[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:18:20.991[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:18:30.996[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:18:40.997[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:18:51.000[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:19:00.999[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:19:10.998[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:19:21.000[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:19:31.001[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:19:41.003[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:19:51.004[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:20:01.008[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:20:11.013[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:20:21.018[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:20:31.018[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:20:41.023[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:20:51.027[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:21:01.028[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:21:11.033[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:21:21.039[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:21:31.042[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:21:41.043[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:21:51.045[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:22:01.047[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:22:11.049[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:22:21.053[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:22:31.059[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:22:41.062[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:22:51.067[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:23:01.073[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:23:11.078[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:23:21.080[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:23:31.085[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:23:41.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:23:51.089[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:24:01.093[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:24:11.097[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:24:21.099[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:24:31.104[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:24:41.106[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:24:51.112[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:25:01.115[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:25:11.118[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:25:21.124[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:25:31.126[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:25:41.129[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:25:51.130[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:26:01.135[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:26:11.138[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:26:21.140[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:26:31.146[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:26:41.151[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:26:51.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:27:01.160[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:27:11.163[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:27:21.169[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:27:31.170[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:27:41.175[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:27:51.177[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:28:01.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:28:11.185[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:28:21.189[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:28:31.195[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:28:41.201[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:28:51.206[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:29:01.211[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:29:11.216[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:29:21.222[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:29:31.228[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:29:41.233[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:29:51.236[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:30:01.242[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:30:11.247[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:30:21.250[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:30:31.251[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:30:41.254[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:30:51.259[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:31:01.261[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:31:11.267[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:31:21.271[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:31:31.274[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:31:41.276[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:31:51.282[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:32:01.286[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:32:11.291[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:32:21.296[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:32:31.301[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:32:41.304[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:32:51.305[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:33:01.308[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:33:11.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:33:21.313[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:33:31.314[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:33:41.317[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:33:51.322[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:34:01.324[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:34:11.330[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:34:21.334[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:34:31.335[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:34:41.340[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:34:51.342[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:35:01.343[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:35:11.348[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:35:21.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:35:31.356[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:35:41.358[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:35:51.364[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:36:01.366[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:36:11.372[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:36:21.374[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:36:31.380[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:36:41.385[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:36:51.387[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:37:01.391[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:37:11.396[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:37:18.626[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:37:18.626[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:37:18.708[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'O00AWvCMxFtFQhOaf4Dqau7A=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'O00AWvCMxFtFQhOaf4Dqau7A=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 16:37:21.401[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:37:31.404[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:37:41.406[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:37:51.411[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:38:01.417[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:38:11.421[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:38:21.422[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:38:31.428[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:38:41.431[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:38:51.438[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:39:01.442[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:39:11.444[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:39:21.447[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:39:28.795[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:39:28.795[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:39:28.798[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before set Executor
[36m2024-06-10 16:39:28.798[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Loop sArr
[36m2024-06-10 16:39:28.799[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Future
[36m2024-06-10 16:39:28.848[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 16:39:28.848[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 16:39:28.848[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 16:39:28.848[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 16:39:28.848[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 16:39:30.544[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- IMSI : OK
[36m2024-06-10 16:39:30.545[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- ENB : OK
[36m2024-06-10 16:39:30.545[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- MME : OK
[36m2024-06-10 16:39:30.545[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- SGW : OK
[36m2024-06-10 16:39:30.553[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- PGW : OK
[36m2024-06-10 16:39:31.449[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:39:41.453[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:39:51.458[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:40:01.463[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:40:11.469[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:40:21.470[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:40:31.471[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:40:41.477[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:40:51.482[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:41:01.488[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:41:11.493[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:41:21.495[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:41:22.284[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 16:41:22.284[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 16:41:22.343[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 16:41:31.499[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:41:41.502[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:41:51.506[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:42:01.508[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:42:11.509[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:42:21.514[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:42:31.516[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:42:41.522[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:42:51.527[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:43:01.533[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:43:11.538[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:43:21.541[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:43:31.547[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:43:41.548[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:43:51.549[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:44:01.552[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:44:11.556[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:44:21.561[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:44:31.562[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:44:41.563[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:44:51.567[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:45:01.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:45:11.577[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:45:21.579[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:45:31.581[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:45:41.582[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:45:51.586[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:46:01.589[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:46:11.595[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:46:21.601[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:46:31.605[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:46:41.611[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:46:51.616[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:47:01.618[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:47:11.623[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:47:21.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:47:31.631[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:47:41.632[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:47:51.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:48:01.643[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:48:11.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:48:21.650[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:48:31.651[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:48:41.654[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:48:51.658[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:49:01.664[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:49:11.666[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:49:21.671[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:49:31.677[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:49:41.683[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:49:51.683[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:50:01.686[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:50:11.692[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:50:21.697[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:50:31.698[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:50:41.700[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:50:51.701[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:51:01.704[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:51:11.705[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:51:21.711[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:51:31.714[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:51:41.720[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:51:51.721[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:52:01.722[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:52:11.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:52:21.731[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:52:31.736[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:52:41.738[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:52:51.740[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:53:01.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:53:11.746[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:53:21.752[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:53:31.757[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:53:41.762[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:53:51.766[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:54:01.772[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:54:11.776[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:54:21.778[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:54:31.783[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:54:41.784[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:54:51.788[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:55:01.791[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:55:11.793[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:55:21.796[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:55:31.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:55:41.803[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:55:51.808[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:56:01.811[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:56:11.817[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:56:21.821[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:56:31.826[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:56:41.832[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:56:51.837[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:57:01.839[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:57:11.845[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:57:21.850[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:57:31.856[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:57:41.862[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:57:51.867[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:58:01.873[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:58:11.878[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:58:21.883[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:58:31.888[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:58:41.894[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:58:51.898[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:59:01.901[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:59:11.904[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:59:21.905[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:59:31.911[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:59:41.916[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 16:59:51.922[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:00:01.928[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:00:11.931[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:00:21.935[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:00:31.940[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:00:41.946[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:00:51.952[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:01:01.954[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:01:11.959[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:01:21.964[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:01:31.970[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:01:41.972[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:01:51.977[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:02:01.983[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:02:11.989[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:02:21.992[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:02:31.997[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:02:42.003[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:02:52.009[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:03:02.012[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:03:12.015[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:03:22.019[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:03:32.025[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:03:42.031[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:03:52.033[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:04:02.039[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:04:12.044[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:04:22.046[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:04:32.052[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:04:42.057[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:04:52.063[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:05:02.069[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:05:12.074[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:05:22.078[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:05:32.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:05:42.088[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:05:52.094[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:06:02.097[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:06:12.102[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:06:22.108[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:06:32.113[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:06:42.119[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:06:52.125[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:07:02.130[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:07:12.132[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:07:22.135[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:07:32.140[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:07:42.143[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:07:52.146[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:08:02.147[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:08:12.149[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:08:22.152[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:08:32.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:08:42.161[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:08:52.163[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:09:02.164[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:09:12.169[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:09:22.171[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:09:32.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:09:42.183[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:09:52.185[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:10:02.188[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:10:12.193[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:10:22.197[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:10:32.199[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:10:42.201[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:10:52.203[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:11:02.209[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:11:12.210[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:11:22.215[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:11:32.219[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:11:42.225[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:11:52.229[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:12:02.235[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:12:12.236[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:12:22.239[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:12:32.241[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:12:42.246[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:12:52.251[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:13:02.257[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:13:12.259[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:13:22.260[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:13:32.264[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:13:42.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:13:52.269[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:14:02.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:14:12.277[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:14:22.278[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:14:32.280[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:14:42.285[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:14:52.289[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:15:02.295[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:15:12.300[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:15:22.306[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:15:32.312[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:15:42.313[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:15:52.319[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:16:02.324[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:16:12.329[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:16:22.334[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:16:32.337[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:16:42.335[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:16:52.333[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:17:02.336[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:17:12.339[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:17:22.342[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:17:32.344[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:17:42.346[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:17:52.350[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:18:02.352[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:18:12.357[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:18:22.361[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:18:25.324[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 17:18:25.341[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 17:18:25.368[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 17:18:25.378[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 17:18:25.415[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 17:18:25.464[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.464[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.469[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 17:18:25.602[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.602[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.718[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.718[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.719[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 17:18:25.720[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.720[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.720[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.720[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.720[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.720[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.722[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.722[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.771[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.771[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.872[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 17:18:25.872[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 17:18:25.872[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 17:18:25.873[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 17:18:25.922[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:25.922[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:25.924[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 17:18:29.652[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:29.653[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:29.715[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 17:18:29.769[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 17:18:29.774[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 17:18:32.366[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:18:37.424[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:37.424[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:37.426[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before set Executor
[36m2024-06-10 17:18:37.427[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Loop sArr
[36m2024-06-10 17:18:37.429[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Future
[36m2024-06-10 17:18:37.479[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 17:18:37.479[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 17:18:37.479[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 17:18:37.480[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 17:18:37.482[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 17:18:37.978[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- IMSI : OK
[36m2024-06-10 17:18:37.979[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- ENB : OK
[36m2024-06-10 17:18:37.979[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- MME : OK
[36m2024-06-10 17:18:37.979[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- SGW : OK
[36m2024-06-10 17:18:37.979[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- PGW : OK
[36m2024-06-10 17:18:42.372[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:18:42.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:18:42.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:18:43.021[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 17:18:52.377[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:19:02.379[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:19:07.888[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:19:07.889[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:19:07.922[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 17:19:12.385[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:19:22.386[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:19:32.386[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:19:42.389[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:19:52.394[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:20:02.399[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:20:12.404[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:20:22.406[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:20:32.406[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:20:42.409[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:20:52.413[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:20:55.788[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:20:55.789[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:20:55.801[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 17:21:02.417[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:21:12.421[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:21:22.427[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:21:25.348[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:21:25.348[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:21:25.604[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 17:21:32.433[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:21:42.434[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:21:52.435[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:22:02.437[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:22:12.438[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:22:13.680[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:13.680[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:13.692[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 17:22:14.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:14.716[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:14.718[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:14.718[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:14.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:14.719[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:14.756[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:14.761[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:14.764[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:14.764[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:14.772[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 17:22:14.773[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 17:22:14.773[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:14.773[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:14.779[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 17:22:14.806[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:14.806[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:14.807[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 17:22:14.926[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:14.926[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:14.931[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 17:22:22.443[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:22:32.449[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:22:42.454[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:22:44.587[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:44.588[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:44.597[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 17:22:44.653[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 17:22:44.656[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 17:22:52.456[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:22:52.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:52.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:52.607[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before set Executor
[36m2024-06-10 17:22:52.607[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before Loop sArr
[36m2024-06-10 17:22:52.609[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before Future
[36m2024-06-10 17:22:52.661[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 17:22:52.661[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 17:22:52.662[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 17:22:52.662[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 17:22:52.663[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 17:22:53.279[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- IMSI : OK
[36m2024-06-10 17:22:53.279[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- ENB : OK
[36m2024-06-10 17:22:53.281[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- MME : OK
[36m2024-06-10 17:22:53.281[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- SGW : OK
[36m2024-06-10 17:22:53.281[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- PGW : OK
[36m2024-06-10 17:22:56.504[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:22:56.505[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:22:56.645[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 17:23:00.420[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:23:00.420[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:23:00.446[m [33m[WARN ][m [org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver] [33m[http-nio-9091-exec-5][m- Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.mobigen.cdev.poc.core.base.dto.RsResultDto> com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getSignalCallLogXdr(java.util.Map<java.lang.String, java.lang.Object>)]
[36m2024-06-10 17:23:00.449[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:23:00.449[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:23:02.461[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:23:12.464[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:23:14.442[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:23:14.445[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:23:14.494[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 17:23:22.468[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:23:32.470[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:23:42.476[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:23:52.477[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:24:02.479[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:24:12.484[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:24:22.486[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:24:32.492[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:24:42.493[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:24:52.495[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:25:02.497[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:25:12.497[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:25:22.502[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:25:32.505[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:25:42.507[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:25:52.509[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:26:02.511[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:26:12.516[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:26:22.518[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:26:32.519[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:26:42.522[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:26:52.528[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:27:02.530[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:27:12.532[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:27:22.536[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:27:32.541[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:27:42.547[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:27:52.550[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:28:02.550[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:28:12.551[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:28:22.554[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:28:32.558[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:28:42.561[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:28:52.565[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:29:02.568[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:29:12.573[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:29:22.576[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:29:32.582[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:29:42.585[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:29:52.587[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:30:02.588[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:30:12.595[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:30:22.600[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:30:32.602[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:30:42.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:30:52.611[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:31:02.615[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:31:12.616[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:31:22.620[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:31:32.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:31:42.628[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:31:52.633[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:32:02.639[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:32:12.644[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:32:22.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:32:32.655[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:32:42.660[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:32:52.665[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:33:02.671[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:33:12.676[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:33:22.682[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:33:32.682[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:33:42.684[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:33:52.689[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:34:02.692[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:34:12.694[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:34:22.698[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:34:32.704[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:34:42.709[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:34:52.714[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:35:02.718[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:35:12.721[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:35:22.723[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:35:32.726[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:35:42.731[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:35:52.735[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:36:02.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:36:12.747[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:36:22.751[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:36:32.753[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:36:42.758[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:36:52.764[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:37:02.768[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:37:12.769[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:37:22.774[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:37:32.775[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:37:42.776[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:37:52.782[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:38:02.785[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:38:12.790[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:38:22.796[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:38:32.801[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:38:42.807[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:38:52.812[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:39:02.816[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:39:12.819[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:39:22.822[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:39:32.827[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:39:42.832[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:39:52.838[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:40:02.843[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:40:12.847[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:40:22.852[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:40:32.855[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:40:42.860[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:40:52.866[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:41:02.871[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:41:12.873[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:41:22.876[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:41:32.881[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:41:42.883[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:41:52.889[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:42:02.890[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:42:12.892[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:42:22.897[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:42:32.902[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:42:42.903[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:42:52.909[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:43:02.914[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:43:12.919[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:43:22.925[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:43:32.929[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:43:42.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:43:52.933[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:44:02.938[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:44:12.939[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:44:22.944[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:44:32.946[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:44:42.948[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:44:52.950[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:45:02.957[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:45:12.963[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:45:22.965[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:45:32.969[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:45:42.971[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:45:52.976[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:46:02.979[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:46:12.985[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:46:22.990[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:46:32.996[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:46:43.002[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:46:52.789[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:52.789[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:52.789[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:52.789[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:52.789[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:52.789[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:52.789[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:52.789[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:52.790[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:52.790[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:52.834[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:52.838[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:52.857[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 17:46:52.857[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 17:46:52.857[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 17:46:52.868[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 17:46:52.929[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 17:46:52.929[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 17:46:52.937[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 17:46:52.937[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 17:46:53.008[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:46:57.713[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:57.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:57.714[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:57.714[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:57.714[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:57.713[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:57.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:57.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:57.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:57.718[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:57.722[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 17:46:57.726[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 17:46:57.729[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 17:46:57.756[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 17:46:57.763[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 17:46:57.763[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 17:46:57.764[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 17:46:57.764[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 17:46:57.801[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 17:46:57.802[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 17:47:03.012[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:47:13.017[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:47:23.021[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:47:33.022[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:47:43.026[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:47:53.028[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:48:03.033[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:48:13.038[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:48:23.043[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:48:33.049[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:48:43.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:48:53.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:49:03.064[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:49:13.067[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:49:23.072[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:49:33.076[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:49:43.082[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:49:53.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:50:03.092[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:50:13.093[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:50:23.095[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:50:33.101[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:50:43.102[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:50:53.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:51:03.056[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:51:13.061[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:51:23.065[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:51:33.065[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:51:43.069[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:51:53.073[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:52:03.077[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:52:13.079[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:52:23.080[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:52:33.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:52:43.092[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:52:53.097[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:53:03.103[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:53:13.106[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:53:23.113[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:53:33.118[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:53:43.122[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:53:53.127[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:54:03.131[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:54:13.133[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:54:23.136[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:54:33.138[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:54:43.142[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:54:53.148[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:55:03.148[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:55:13.151[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:55:23.156[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:55:33.162[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:55:43.167[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:55:53.173[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:56:03.173[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:56:13.174[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:56:23.177[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:56:33.182[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:56:43.187[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:56:53.188[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:57:03.193[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:57:13.196[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:57:23.200[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:57:33.202[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:57:43.207[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:57:53.208[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:58:03.214[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:58:13.216[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:58:23.217[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:58:33.219[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:58:43.224[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:58:53.226[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:59:03.227[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:59:13.228[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:59:23.232[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:59:33.238[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:59:43.243[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 17:59:53.246[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:00:03.247[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:00:13.252[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:00:23.258[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:00:33.263[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:00:43.267[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:00:53.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:01:03.273[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:01:13.274[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:01:23.279[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:01:33.284[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:01:43.286[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:01:53.291[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:02:03.295[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:02:13.298[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:02:23.303[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:02:33.306[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:02:43.312[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:02:53.313[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:03:03.313[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:03:13.315[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:03:23.320[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:03:33.322[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:03:43.327[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:03:53.330[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:04:03.336[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:04:13.339[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:04:23.344[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:04:33.348[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:04:43.350[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:04:53.351[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:05:03.352[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:05:13.358[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:05:23.363[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:05:33.368[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:05:43.371[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:05:53.373[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:06:03.378[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:06:13.379[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:06:23.385[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:06:33.388[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:06:43.389[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:06:53.390[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:07:03.390[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:07:13.395[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:07:23.398[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:07:33.403[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:07:43.405[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:07:53.409[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:08:03.411[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:08:13.414[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:08:23.417[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:08:33.422[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:08:43.424[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:08:53.429[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:09:03.434[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:09:13.438[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:09:23.441[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:09:33.445[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:09:43.451[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:09:53.452[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:10:03.453[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:10:13.456[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:10:23.460[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:10:33.464[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:10:43.470[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:10:53.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:11:03.477[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:11:13.480[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:11:23.485[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:11:33.486[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:11:43.487[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:11:53.493[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:12:03.498[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:12:13.504[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:12:23.505[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:12:33.508[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:12:43.513[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:12:53.519[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:13:03.522[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:13:13.525[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:13:23.525[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:13:33.527[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:13:43.533[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:13:53.533[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:14:03.539[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:14:13.540[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:14:23.542[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:14:33.542[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:14:43.545[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:14:53.550[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:15:03.556[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:15:13.561[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:15:23.566[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:15:33.567[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:15:43.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:15:53.579[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:15:54.796[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 18:15:54.809[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 18:15:54.857[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 18:15:54.878[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 18:15:54.913[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 18:15:55.216[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.216[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.220[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 18:15:55.394[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.439[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.439[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.444[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 18:15:55.784[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.784[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.785[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.785[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.786[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 18:15:55.787[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.788[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.798[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.798[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.799[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.799[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.810[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.814[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.813[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.814[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.812[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 18:15:55.829[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 18:15:55.833[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 18:15:55.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:15:55.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:15:55.947[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 18:16:00.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:16:00.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:16:00.447[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 18:16:00.470[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 18:16:00.472[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 18:16:03.583[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:16:13.585[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:16:15.749[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:16:15.749[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:16:15.751[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before set Executor
[36m2024-06-10 18:16:15.752[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Loop sArr
[36m2024-06-10 18:16:15.753[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Future
[36m2024-06-10 18:16:15.813[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:16:15.814[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:16:15.815[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:16:15.815[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:16:15.815[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:16:16.135[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- IMSI : OK
[36m2024-06-10 18:16:16.136[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- ENB : OK
[36m2024-06-10 18:16:16.137[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- MME : OK
[36m2024-06-10 18:16:16.137[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- SGW : OK
[36m2024-06-10 18:16:16.137[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- PGW : OK
[36m2024-06-10 18:16:23.585[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:16:30.913[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:16:30.915[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:16:30.927[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 18:16:33.586[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:16:43.589[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:16:53.595[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:17:03.600[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:17:13.601[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:17:23.608[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:17:33.613[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:17:43.618[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:17:53.620[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:18:03.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:18:13.628[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:18:23.630[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:18:33.633[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:18:43.638[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:18:53.643[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:19:03.650[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:19:13.654[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:19:23.660[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:19:33.664[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:19:43.669[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:19:53.673[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:20:03.673[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:20:13.679[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:20:23.685[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:20:33.691[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:20:43.692[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:20:51.665[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:20:51.666[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:20:51.892[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 18:20:51.918[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 18:20:51.923[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 18:20:53.698[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:21:03.702[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:21:13.705[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:21:23.710[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:21:33.713[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:21:43.718[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:21:53.722[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:22:03.727[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:22:13.732[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:22:23.737[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:22:33.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:22:43.745[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:22:53.746[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:23:03.751[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:23:12.106[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:23:12.107[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:23:12.120[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 18:23:13.756[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:23:23.761[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:23:33.766[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:23:43.772[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:23:53.773[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:24:03.775[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:24:13.779[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:24:23.783[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:24:33.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:24:43.848[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:24:53.853[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:25:03.857[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:25:13.861[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:25:23.864[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:25:33.865[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:25:43.878[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:25:53.880[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:26:03.882[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:26:13.887[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:26:23.892[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:26:33.897[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:26:43.903[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:26:53.908[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:27:03.914[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:27:13.920[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:27:23.922[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:27:33.927[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:27:43.927[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:27:53.933[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:28:03.938[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:28:13.939[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:28:23.945[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:28:33.947[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:28:43.952[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:28:53.958[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:29:03.963[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:29:13.965[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:29:23.970[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:29:33.975[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:29:43.981[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:29:53.984[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:30:03.987[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:30:13.993[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:30:23.996[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:30:33.999[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:30:44.005[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:30:52.844[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:30:52.844[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:30:52.885[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'O0EKke0buLK0XisaG6gFPVmA=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'O0EKke0buLK0XisaG6gFPVmA=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 18:30:54.008[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:31:04.011[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:31:09.023[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:31:09.023[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:31:09.052[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 18:31:09.991[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:31:09.992[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:31:09.993[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:31:09.992[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:31:09.994[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:31:09.994[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:31:09.994[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:31:09.995[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:31:09.995[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:31:09.992[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:31:09.996[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:31:09.994[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:31:10.004[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 18:31:10.011[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 18:31:10.011[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 18:31:10.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:31:10.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:31:10.038[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 18:31:10.175[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:31:10.175[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:31:10.176[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 18:31:14.017[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:31:24.022[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:31:34.025[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:31:44.027[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:31:54.032[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:32:04.039[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:32:14.045[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:32:24.051[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:32:34.055[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:32:44.059[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:32:54.063[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:33:04.069[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:33:14.074[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:33:24.080[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:33:34.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:33:44.089[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:33:54.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:34:04.094[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:34:14.099[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:34:24.100[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:34:34.102[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:34:44.107[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:34:54.112[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:35:04.119[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:35:11.572[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 18:35:11.582[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 18:35:11.594[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 18:35:11.603[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 18:35:11.642[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 18:35:11.674[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:11.674[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:11.675[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 18:35:11.814[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:11.814[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:11.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:11.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:11.845[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 18:35:12.169[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:12.169[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:12.173[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:12.173[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:12.175[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:12.176[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:12.176[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:12.176[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:12.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:12.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:12.181[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:12.181[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:12.190[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 18:35:12.190[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 18:35:12.196[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:12.198[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:12.200[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 18:35:12.201[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 18:35:12.320[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:12.320[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:12.321[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 18:35:14.123[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:35:16.703[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:16.704[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:16.810[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 18:35:16.857[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 18:35:16.860[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 18:35:24.129[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:35:27.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:27.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:27.491[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- before set Executor
[36m2024-06-10 18:35:27.492[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- before Loop sArr
[36m2024-06-10 18:35:27.493[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- before Future
[36m2024-06-10 18:35:27.542[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_05000015'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:35:27.542[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_05000015'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:35:27.542[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_05000015'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:35:27.543[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_05000015'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:35:27.543[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_05000015'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:35:27.971[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- IMSI : OK
[36m2024-06-10 18:35:28.020[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- ENB : OK
[36m2024-06-10 18:35:28.020[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- MME : OK
[36m2024-06-10 18:35:28.021[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- SGW : OK
[36m2024-06-10 18:35:28.021[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- PGW : OK
[36m2024-06-10 18:35:34.131[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:35:38.216[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 18:35:38.217[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 18:35:38.219[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before set Executor
[36m2024-06-10 18:35:38.219[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before Loop sArr
[36m2024-06-10 18:35:38.220[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before Future
[36m2024-06-10 18:35:38.307[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:35:38.307[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:35:38.308[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:35:38.308[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:35:38.308[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 18:35:38.415[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- IMSI : OK
[36m2024-06-10 18:35:38.421[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- ENB : OK
[36m2024-06-10 18:35:38.421[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- MME : OK
[36m2024-06-10 18:35:38.421[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- SGW : OK
[36m2024-06-10 18:35:38.421[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- PGW : OK
[36m2024-06-10 18:35:44.137[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:35:54.138[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:36:04.143[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:36:14.145[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:36:24.150[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:36:34.155[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:36:44.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:36:54.160[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:37:04.162[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:37:14.168[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:37:24.172[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:37:34.177[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:37:44.180[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:37:54.183[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:38:04.186[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:38:14.192[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:38:24.194[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:38:34.196[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:38:44.202[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:38:54.207[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:39:04.213[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:39:14.219[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:39:24.222[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:39:34.225[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:39:44.230[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:39:54.232[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:40:04.234[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:40:14.240[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:40:24.245[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:40:34.247[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:40:44.249[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:40:54.255[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:41:04.259[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:41:14.264[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:41:24.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:41:34.267[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:41:44.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:41:54.274[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:42:04.278[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:42:14.284[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:42:24.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:42:34.291[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:42:44.295[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:42:54.299[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:43:04.300[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:43:14.304[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:43:24.305[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:43:34.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:43:44.316[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:43:54.321[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:44:04.327[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:44:14.333[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:44:24.334[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:44:34.340[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:44:44.342[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:44:54.343[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:45:04.345[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:45:14.348[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:45:24.350[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:45:34.352[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:45:44.357[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:45:54.363[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:46:04.369[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:46:14.374[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:46:24.380[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:46:34.386[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:46:44.393[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:46:54.398[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:47:04.403[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:47:14.409[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:47:24.410[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:47:34.416[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:47:44.419[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:47:54.424[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:48:04.429[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:48:14.431[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:48:24.434[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:48:34.441[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:48:44.446[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:48:54.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:49:04.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:49:14.450[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:49:24.455[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:49:34.461[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:49:44.466[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:49:54.467[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:50:04.472[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:50:14.478[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:50:24.482[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:50:34.488[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:50:44.491[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:50:54.493[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:51:04.497[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:51:14.503[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:51:24.506[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:51:34.510[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:51:44.516[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:51:54.521[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:52:04.526[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:52:14.528[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:52:24.533[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:52:34.535[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:52:44.536[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:52:54.537[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:53:04.543[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:53:14.548[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:53:24.550[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:53:34.557[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:53:44.562[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:53:54.567[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:54:04.571[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:54:14.577[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:54:24.582[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:54:34.584[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:54:44.585[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:54:54.586[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:55:04.587[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:55:14.590[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:55:24.595[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:55:34.601[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:55:44.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:55:54.610[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:56:04.620[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:56:14.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:56:24.631[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:56:34.636[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:56:44.640[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:56:54.645[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:57:04.650[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:57:14.655[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:57:24.661[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:57:34.662[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:57:44.668[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:57:54.669[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:58:04.674[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:58:14.698[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:58:24.718[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:58:34.727[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:58:44.736[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:58:54.739[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:59:04.745[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:59:14.748[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:59:24.754[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:59:34.758[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:59:44.765[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 18:59:54.769[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:00:04.771[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:00:14.777[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:00:24.783[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:00:34.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:00:44.788[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:00:54.790[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:01:04.795[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:01:14.800[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:01:24.805[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:01:34.810[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:01:44.815[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:01:54.815[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:02:04.820[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:02:14.820[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:02:24.827[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:02:34.832[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:02:44.833[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:02:54.840[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:03:04.843[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:03:14.848[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:03:24.855[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:03:34.859[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:03:44.861[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:03:54.864[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:04:04.867[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:04:14.871[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:04:24.873[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:04:34.880[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:04:44.885[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:04:54.891[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:05:04.893[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:05:14.898[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:05:24.900[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:05:34.904[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:05:44.910[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:05:54.913[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:06:04.918[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:06:14.925[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:06:24.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:06:34.935[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:06:44.941[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:06:54.942[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:07:04.948[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:07:14.950[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:07:24.955[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:07:34.961[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:07:44.966[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:07:54.968[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:08:04.969[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:08:14.971[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:08:24.977[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:08:34.981[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:08:44.987[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:08:54.990[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:09:04.996[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:09:15.002[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:09:25.008[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:09:35.014[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:09:45.019[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:09:55.025[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:10:05.031[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:10:15.035[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:10:25.039[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:10:35.045[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:10:45.048[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:10:55.050[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:11:05.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:11:15.056[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:11:25.058[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:11:35.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:11:45.061[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:11:55.068[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:12:05.072[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:12:15.077[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:12:25.081[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:12:35.087[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:12:45.090[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:12:55.092[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:13:05.098[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:13:15.103[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:13:25.105[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:13:35.106[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:13:45.109[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:13:55.116[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:14:05.121[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:14:15.127[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:14:25.133[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:14:35.139[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:14:45.145[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:14:55.146[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:15:05.152[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:15:15.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:15:25.163[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:15:35.168[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:15:45.170[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:15:55.171[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:16:05.177[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:16:15.181[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:16:25.187[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:16:35.191[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:16:45.197[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:16:55.202[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:17:05.209[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:17:15.215[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:17:25.221[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:17:35.227[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:17:45.232[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:17:55.234[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:18:05.240[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:18:15.242[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:18:25.247[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:18:35.253[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:18:45.254[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:18:55.254[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:19:05.260[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:19:15.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:19:25.271[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:19:35.277[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:19:45.282[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:19:55.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:20:05.289[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:20:15.293[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:20:25.299[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:20:38.343[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:20:48.348[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:21:47.814[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:22:46.669[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m14s792ms).
[36m2024-06-10 19:22:53.133[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:24:49.153[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:42:06.209[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 19:58:28.467[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=35m41s803ms).
[36m2024-06-10 20:12:58.882[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:19:21.465[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:19:31.476[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:19:34.979[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=21m6s512ms).
[36m2024-06-10 20:20:03.990[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:20:13.993[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:20:24.001[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:20:27.225[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=52s247ms).
[36m2024-06-10 20:20:34.006[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:20:44.013[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:20:54.018[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:21:04.020[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:21:14.022[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:21:24.027[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:21:34.032[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:21:44.038[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:21:54.043[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:22:04.048[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:22:14.053[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:22:24.058[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:22:34.063[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:22:44.068[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:22:54.073[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:23:04.078[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:23:14.082[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:23:24.084[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:23:34.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:23:44.095[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:23:54.099[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:24:04.103[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:24:14.105[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:24:24.108[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:24:34.112[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:24:44.118[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:24:54.122[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:25:04.128[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:25:14.134[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:25:24.135[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:25:34.141[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:25:44.147[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:25:54.149[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:26:04.155[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:26:14.161[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:26:24.167[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:26:34.168[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:26:44.174[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:26:54.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:27:04.180[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:27:14.186[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:27:24.187[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:27:34.192[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:27:44.198[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:27:54.204[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:28:04.210[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:28:14.213[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:28:24.216[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:28:34.221[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:28:44.233[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:28:54.239[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:29:04.249[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:34:43.832[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:34:53.829[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:34:56.851[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m59s568ms).
[36m2024-06-10 20:35:03.832[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:35:13.838[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:35:23.838[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:35:33.839[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:35:43.844[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:35:53.850[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:36:03.855[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:36:13.856[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:36:23.861[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:36:33.863[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:36:43.867[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:36:53.870[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:37:03.871[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:37:13.876[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:37:23.881[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:37:33.882[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:37:43.888[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:37:53.888[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:38:03.894[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:38:13.899[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:38:23.901[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:38:33.906[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:38:43.909[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:38:53.911[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:39:03.916[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:39:13.922[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:39:23.922[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:39:33.924[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:39:43.925[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:39:53.931[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:40:03.933[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:40:13.939[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:40:23.944[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:40:33.950[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:40:43.954[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:40:53.957[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:41:03.961[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:41:13.967[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:41:23.972[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:41:33.977[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:41:43.983[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:41:53.987[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:42:03.993[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:42:13.999[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:42:24.001[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:42:34.006[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:42:44.011[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:42:54.012[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:43:04.019[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:43:14.025[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:43:24.027[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:43:34.030[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:43:44.036[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:43:54.042[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:44:04.057[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:44:14.062[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:44:24.065[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:44:34.071[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:44:44.077[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:44:54.082[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:45:04.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:45:14.087[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:45:24.093[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:45:34.094[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:45:44.099[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:45:54.105[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:46:04.110[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:46:14.114[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:46:24.121[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:46:34.126[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:46:44.129[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:46:54.134[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:47:04.140[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:47:14.143[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:47:24.148[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:47:34.154[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:47:44.156[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:47:54.158[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:48:04.164[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:48:14.169[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:48:24.174[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:48:34.177[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:48:44.182[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:48:54.187[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:49:04.192[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:49:14.195[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:49:24.201[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:49:34.202[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:49:44.207[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:49:54.213[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:50:04.217[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:50:14.218[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:50:24.223[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:50:34.228[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:50:44.234[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:50:54.239[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:51:04.240[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:51:14.245[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:51:24.250[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:51:34.256[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:51:44.257[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:51:54.262[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:52:04.267[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:52:14.273[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:52:24.277[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:52:34.282[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:52:44.283[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:52:54.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:53:04.293[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:53:14.299[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:53:24.304[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:53:34.306[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:53:44.182[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 20:53:44.194[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 20:53:44.220[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 20:53:44.229[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 20:53:44.238[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 20:53:44.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.271[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.274[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 20:53:44.309[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:53:44.414[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.415[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.576[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.578[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 20:53:44.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.578[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.578[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.584[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.584[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.594[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 20:53:44.595[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 20:53:44.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.650[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 20:53:44.650[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 20:53:44.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:44.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:44.728[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 20:53:50.851[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:53:50.858[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:53:50.881[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 20:53:50.904[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 20:53:50.907[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 20:53:54.315[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:54:00.711[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:54:00.711[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:54:00.713[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before set Executor
[36m2024-06-10 20:54:00.713[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before Loop sArr
[36m2024-06-10 20:54:00.715[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before Future
[36m2024-06-10 20:54:00.772[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-11-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 20:54:00.772[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-11-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 20:54:00.774[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-11-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 20:54:00.774[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-11-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 20:54:00.774[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-11-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 20:54:00.890[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- IMSI : OK
[36m2024-06-10 20:54:00.890[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- ENB : OK
[36m2024-06-10 20:54:00.890[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- MME : OK
[36m2024-06-10 20:54:00.891[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- SGW : OK
[36m2024-06-10 20:54:00.891[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- PGW : OK
[36m2024-06-10 20:54:04.321[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:54:08.015[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 20:54:08.015[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 20:54:08.035[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 20:54:14.327[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:54:24.329[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:54:34.329[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:54:44.332[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:54:54.335[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:55:04.341[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:55:14.342[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:55:24.347[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:55:34.349[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:55:44.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:55:54.360[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:56:04.364[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:56:14.367[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:56:24.369[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:56:34.373[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:56:44.375[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:56:54.377[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:57:04.383[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:57:14.386[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:57:24.391[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:57:34.393[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:57:44.398[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:57:54.404[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:58:04.409[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:58:14.415[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:58:24.416[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:58:34.418[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:58:44.427[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:58:54.432[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 20:58:56.885[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 20:58:56.887[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-06-10 20:58:56.928[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-06-10 21:34:31.046[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 4318 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-06-10 21:34:31.048[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-10 21:34:31.049[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-10 21:34:31.358[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-10 21:34:31.398[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interfaces.
[36m2024-06-10 21:34:31.556[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-10 21:34:32.040[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-10 21:34:32.047[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 21:34:32.047[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-10 21:34:32.047[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-10 21:34:32.121[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-10 21:34:32.121[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1050 ms
[36m2024-06-10 21:34:32.238[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-10 21:34:32.283[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-10 21:34:32.397[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-10 21:34:32.515[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-10 21:34:32.628[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-10 21:34:32.648[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-10 21:34:32.973[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-10 21:34:32.979[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 21:34:33.400[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-10 21:34:33.504[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:34:33.504[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:34:33.504[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 21:34:33.504[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 21:34:33.548[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ab780fd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b8683b8, org.springframework.security.web.context.SecurityContextPersistenceFilter@7ab8f93, org.springframework.security.web.header.HeaderWriterFilter@1ff52a71, org.springframework.security.web.authentication.logout.LogoutFilter@bbf361a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d87e7f3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14c7ab73, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@495598c5, org.springframework.security.web.session.SessionManagementFilter@24f8707c, org.springframework.security.web.access.ExceptionTranslationFilter@65192f16, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4807b2b7]
[36m2024-06-10 21:34:33.582[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-10 21:34:33.836[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 21:34:33.853[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-10 21:34:33.859[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.14 seconds (JVM running for 3.892)
[36m2024-06-10 21:34:35.484[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-10 21:34:35.520[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-10 21:34:35.521[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-10 21:34:35.521[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-10 21:34:35.521[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:34:44.892[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-06-10 21:34:44.893[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-06-10 21:34:44.894[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-06-10 21:34:45.149[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 21:34:45.159[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:34:45.170[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 21:34:45.180[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 21:34:45.188[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 21:34:45.235[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.235[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.261[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:34:45.413[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.414[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.450[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.453[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:34:45.521[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:34:45.798[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.799[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.799[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.799[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.800[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.800[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.801[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.801[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.805[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.805[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.807[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 21:34:45.805[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.807[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.816[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 21:34:45.819[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:34:45.825[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.825[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.833[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 21:34:45.914[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:45.914[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:45.916[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 21:34:49.581[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:49.581[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:49.621[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:34:49.645[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:34:49.648[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:34:54.618[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:54.619[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:54.624[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before set Executor
[36m2024-06-10 21:34:54.625[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Loop sArr
[36m2024-06-10 21:34:54.627[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Future
[36m2024-06-10 21:34:54.686[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:34:54.686[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:34:54.686[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:34:54.686[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:34:54.687[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:34:54.799[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- IMSI : OK
[36m2024-06-10 21:34:54.803[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- ENB : OK
[36m2024-06-10 21:34:54.803[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- MME : OK
[36m2024-06-10 21:34:54.804[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- SGW : OK
[36m2024-06-10 21:34:54.804[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- PGW : OK
[36m2024-06-10 21:34:55.525[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:34:58.507[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:34:58.508[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:34:58.550[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:35:00.369[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:35:00.369[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:35:00.386[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-9][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$EnhancerBySpringCGLIB$$836e2211.getPacketFile(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:153) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor216.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:1062) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:852) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:845) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor216.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-06-10 21:35:05.531[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:35:15.537[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:35:25.539[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:35:35.545[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:35:45.548[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:35:55.551[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:36:05.553[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:36:15.560[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:36:18.965[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:36:18.966[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:36:18.969[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-6][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$EnhancerBySpringCGLIB$$836e2211.getPacketFile(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:153) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor216.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:1062) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:852) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:845) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor216.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-06-10 21:36:25.564[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:36:35.565[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:36:45.571[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:36:55.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:36:57.796[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:36:57.797[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:36:57.817[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:36:59.794[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:36:59.794[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:36:59.797[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-10][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$EnhancerBySpringCGLIB$$836e2211.getPacketFile(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:153) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor216.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:1062) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:852) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:845) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor216.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-06-10 21:37:05.576[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:37:15.581[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:37:16.826[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:37:16.827[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:37:16.830[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-2][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$EnhancerBySpringCGLIB$$836e2211.getPacketFile(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:153) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor216.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:1062) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:852) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:845) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor216.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$47e1856f.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$9a295881.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-06-10 21:37:25.584[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:37:35.586[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:37:45.592[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:37:51.661[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 21:37:51.662[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-06-10 21:37:51.704[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-06-10 21:37:54.378[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 4573 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-06-10 21:37:54.381[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-10 21:37:54.381[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-10 21:37:54.729[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-10 21:37:54.783[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 45 ms. Found 1 JPA repository interfaces.
[36m2024-06-10 21:37:55.032[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-10 21:37:55.633[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-10 21:37:55.642[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 21:37:55.643[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-10 21:37:55.643[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-10 21:37:55.726[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-10 21:37:55.726[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1319 ms
[36m2024-06-10 21:37:55.858[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-10 21:37:55.905[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-10 21:37:56.069[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-10 21:37:56.229[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-10 21:37:56.426[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-10 21:37:56.462[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-10 21:37:56.849[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-10 21:37:56.856[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 21:37:57.545[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-10 21:37:57.661[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:37:57.662[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 21:37:57.662[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 21:37:57.663[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:37:57.803[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7053a864, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@282079b9, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ce1cc03, org.springframework.security.web.header.HeaderWriterFilter@d79a69b, org.springframework.security.web.authentication.logout.LogoutFilter@798d8247, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@186537ac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4733662d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d6c7152, org.springframework.security.web.session.SessionManagementFilter@24caa80, org.springframework.security.web.access.ExceptionTranslationFilter@7bb4f09d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7aa62a90]
[36m2024-06-10 21:37:57.850[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-10 21:37:58.453[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 21:37:58.485[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-10 21:37:58.494[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 4.515 seconds (JVM running for 5.471)
[36m2024-06-10 21:37:58.712[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-10 21:37:59.006[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-10 21:37:59.006[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-10 21:37:59.006[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-10 21:37:59.006[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:38:04.223[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-06-10 21:38:04.223[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-06-10 21:38:04.225[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-06-10 21:38:07.640[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 21:38:07.649[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:38:07.661[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 21:38:07.671[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 21:38:07.682[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 21:38:07.721[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:07.722[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:07.757[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:38:07.905[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:07.906[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:07.954[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:07.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:07.983[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:38:08.735[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:08.736[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:08.736[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:08.736[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:08.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:08.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:08.749[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:08.750[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:08.750[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:08.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:08.753[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:08.754[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:08.778[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 21:38:08.794[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 21:38:08.794[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:38:08.826[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:08.828[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:08.839[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 21:38:08.996[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:08.996[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:08.999[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 21:38:09.009[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:38:12.801[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:12.802[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:12.850[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:38:12.871[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:38:12.875[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:38:19.015[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:38:22.201[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:22.201[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:22.205[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before set Executor
[36m2024-06-10 21:38:22.206[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Loop sArr
[36m2024-06-10 21:38:22.207[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Future
[36m2024-06-10 21:38:22.260[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:38:22.260[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:38:22.260[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:38:22.260[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:38:22.261[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:38:22.375[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- IMSI : OK
[36m2024-06-10 21:38:22.375[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- ENB : OK
[36m2024-06-10 21:38:22.376[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- MME : OK
[36m2024-06-10 21:38:22.376[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- SGW : OK
[36m2024-06-10 21:38:22.377[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- PGW : OK
[36m2024-06-10 21:38:25.729[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:25.730[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:38:25.779[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:38:28.695[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:38:28.696[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:39:46.373[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:39:46.373[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m19s835ms).
[36m2024-06-10 21:39:54.462[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-1][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$EnhancerBySpringCGLIB$$66b430e1.getPacketFile(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$ba29e2eb.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$6d18700c.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:153) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor216.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$ba29e2eb.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$6d18700c.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for com.mobigen.cdev.mapper.mysql.module.nw.searchgetPaketTargetFile
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:1062) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:852) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:845) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor216.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl.getPaketTargetFile(NwSearchRepositoryImpl.java:28) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$FastClassBySpringCGLIB$$64a7d3a5.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwSearchRepositoryImpl$$EnhancerBySpringCGLIB$$ba29e2eb.getPaketTargetFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl.getPacketFile(NwSearchServiceImpl.java:40) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$FastClassBySpringCGLIB$$c4034d76.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwSearchServiceImpl$$EnhancerBySpringCGLIB$$6d18700c.getPacketFile(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController.getPacketFile(NwSearchController.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwSearchController$$FastClassBySpringCGLIB$$d04db5aa.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-06-10 21:39:54.564[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 21:39:54.565[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-06-10 21:39:54.609[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-06-10 21:39:57.677[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 4737 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-06-10 21:39:57.679[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-10 21:39:57.680[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-10 21:39:57.998[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-10 21:39:58.051[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 47 ms. Found 1 JPA repository interfaces.
[36m2024-06-10 21:39:58.220[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-10 21:39:58.670[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-10 21:39:58.677[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 21:39:58.677[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-10 21:39:58.677[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-10 21:39:58.747[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-10 21:39:58.747[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1043 ms
[36m2024-06-10 21:39:58.857[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-10 21:39:58.895[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-10 21:39:59.024[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-10 21:39:59.145[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-10 21:39:59.282[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-10 21:39:59.304[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-10 21:39:59.648[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-10 21:39:59.654[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 21:40:00.186[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-10 21:40:00.299[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:40:00.299[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:40:00.300[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 21:40:00.300[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 21:40:00.366[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@a3f1f32, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67fda9fb, org.springframework.security.web.context.SecurityContextPersistenceFilter@80081d7, org.springframework.security.web.header.HeaderWriterFilter@6980fa39, org.springframework.security.web.authentication.logout.LogoutFilter@d79a69b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3070f59f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f16c21f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@580a5b6e, org.springframework.security.web.session.SessionManagementFilter@1cc878e6, org.springframework.security.web.access.ExceptionTranslationFilter@106c73ed, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@13e6ab86]
[36m2024-06-10 21:40:00.418[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-10 21:40:00.814[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 21:40:00.841[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-10 21:40:00.849[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.511 seconds (JVM running for 4.121)
[36m2024-06-10 21:40:01.360[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-10 21:40:01.741[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-10 21:40:01.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-10 21:40:01.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-10 21:40:01.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:40:06.313[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-06-10 21:40:06.313[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-06-10 21:40:06.314[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-06-10 21:40:09.389[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 21:40:09.399[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:40:09.412[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 21:40:09.425[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 21:40:09.435[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 21:40:09.483[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:09.483[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:09.518[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:40:09.668[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:09.668[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:09.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:09.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:09.717[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:40:10.456[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:10.456[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:10.456[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:10.456[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:10.456[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:10.457[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:10.459[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:10.460[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:10.467[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:10.467[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:10.474[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:10.475[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:10.485[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:10.485[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:10.493[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 21:40:10.494[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 21:40:10.497[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:40:10.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 21:40:10.614[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:10.615[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:10.617[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 21:40:11.748[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:40:15.379[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:15.380[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:15.424[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:40:15.447[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:40:15.451[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:40:20.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:20.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:20.344[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before set Executor
[36m2024-06-10 21:40:20.345[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Loop sArr
[36m2024-06-10 21:40:20.346[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Future
[36m2024-06-10 21:40:20.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:40:20.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:40:20.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:40:20.410[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:40:20.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:40:20.525[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- IMSI : OK
[36m2024-06-10 21:40:20.525[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- ENB : OK
[36m2024-06-10 21:40:20.527[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- MME : OK
[36m2024-06-10 21:40:20.532[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- SGW : OK
[36m2024-06-10 21:40:20.532[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- PGW : OK
[36m2024-06-10 21:40:21.753[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:40:23.972[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:23.973[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:24.027[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:40:25.731[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:40:25.732[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:40:32.106[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:40:32.117[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            FILE_PATH TARGET_FILE_PATH
        ,   FILE_NAME
        FROM CU_PACKET_FILE cpf
        WHERE 1 = 1
        AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
        AND ENV_STATUS = 'local'

[36m2024-06-10 21:40:43.023[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:41:23.112[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:41:23.112[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45s787ms).
[36m2024-06-10 21:41:23.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:41:23.179[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:41:33.118[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:41:43.125[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:41:49.393[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:41:49.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:41:49.423[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:41:51.731[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:41:51.732[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:41:51.750[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            FILE_PATH TARGET_FILE_PATH
        ,   FILE_NAME
        FROM CU_PACKET_FILE cpf
        WHERE 1 = 1
        AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND IMSI = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
        AND ENV_STATUS = 'local'

[36m2024-06-10 21:41:51.801[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:41:51.801[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:41:53.128[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:42:03.132[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:42:13.138[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:42:23.144[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:42:33.148[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:42:43.154[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:42:53.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:43:00.177[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:00.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:00.190[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:43:03.004[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:03.005[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:03.021[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            FILE_PATH TARGET_FILE_PATH
        ,   FILE_NAME
        FROM CU_PACKET_FILE cpf
        WHERE 1 = 1
        AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND IMSI = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
        AND ENV_STATUS = 'local'

[36m2024-06-10 21:43:03.069[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:03.070[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:03.164[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:43:13.170[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:43:20.846[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 21:43:20.847[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-06-10 21:43:20.889[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-06-10 21:43:24.673[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 4985 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-06-10 21:43:24.675[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-10 21:43:24.676[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-10 21:43:24.972[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-10 21:43:25.014[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 36 ms. Found 1 JPA repository interfaces.
[36m2024-06-10 21:43:25.170[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-10 21:43:25.673[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-10 21:43:25.680[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 21:43:25.680[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-10 21:43:25.680[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-10 21:43:25.744[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-10 21:43:25.744[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1045 ms
[36m2024-06-10 21:43:25.862[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-10 21:43:25.907[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-10 21:43:26.043[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-10 21:43:26.194[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-10 21:43:26.355[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-10 21:43:26.379[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-10 21:43:26.747[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-10 21:43:26.753[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 21:43:27.279[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-10 21:43:27.378[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:43:27.378[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:43:27.378[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 21:43:27.378[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-10 21:43:27.434[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4807b2b7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71eead09, org.springframework.security.web.context.SecurityContextPersistenceFilter@5dd62f07, org.springframework.security.web.header.HeaderWriterFilter@1174ff02, org.springframework.security.web.authentication.logout.LogoutFilter@b97f195, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3db3668, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@125c03d3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@586af46, org.springframework.security.web.session.SessionManagementFilter@19a544cd, org.springframework.security.web.access.ExceptionTranslationFilter@4a985388, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5b9ca528]
[36m2024-06-10 21:43:27.469[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-10 21:43:27.784[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-10 21:43:27.813[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-10 21:43:27.827[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.53 seconds (JVM running for 4.24)
[36m2024-06-10 21:43:29.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-10 21:43:29.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-10 21:43:29.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-10 21:43:29.355[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-10 21:43:29.355[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:43:34.431[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-06-10 21:43:34.431[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-06-10 21:43:34.432[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-06-10 21:43:37.572[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 21:43:37.580[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:43:37.593[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 21:43:37.604[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 21:43:37.612[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 21:43:37.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:37.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:37.677[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:43:37.819[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:37.819[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:37.862[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:37.863[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:37.865[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:43:38.601[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:38.602[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:38.602[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:38.603[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:38.603[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:38.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:38.615[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:38.627[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:38.628[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:38.628[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:38.629[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:38.629[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:38.642[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:38.643[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:38.651[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:43:38.654[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 21:43:38.654[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 21:43:38.662[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 21:43:38.777[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:38.777[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:38.781[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 21:43:39.360[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:43:48.065[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:48.066[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:48.105[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:43:48.130[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:43:48.134[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:43:49.363[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:43:52.635[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:52.636[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:52.641[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before set Executor
[36m2024-06-10 21:43:52.641[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Loop sArr
[36m2024-06-10 21:43:52.643[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Future
[36m2024-06-10 21:43:52.704[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:43:52.704[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:43:52.705[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:43:52.705[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:43:52.706[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:43:52.818[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- IMSI : OK
[36m2024-06-10 21:43:52.829[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- ENB : OK
[36m2024-06-10 21:43:52.830[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- MME : OK
[36m2024-06-10 21:43:52.832[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- SGW : OK
[36m2024-06-10 21:43:52.832[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- PGW : OK
[36m2024-06-10 21:43:54.644[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:54.645[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:54.647[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before set Executor
[36m2024-06-10 21:43:54.647[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before Loop sArr
[36m2024-06-10 21:43:54.648[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before Future
[36m2024-06-10 21:43:54.705[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:43:54.709[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:43:54.709[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:43:54.709[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:43:54.709[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:43:54.826[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- IMSI : OK
[36m2024-06-10 21:43:54.827[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- ENB : OK
[36m2024-06-10 21:43:54.827[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- MME : OK
[36m2024-06-10 21:43:54.828[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- SGW : OK
[36m2024-06-10 21:43:54.829[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- PGW : OK
[36m2024-06-10 21:43:56.068[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:43:56.068[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:43:56.124[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'O00AWvCMxFtFQhOaf4Dqau7A=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'O00AWvCMxFtFQhOaf4Dqau7A=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:43:59.366[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:44:01.620[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:44:01.622[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:44:01.649[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:44:05.198[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:44:05.199[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:44:05.219[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:44:06.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:44:06.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:44:06.624[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            FILE_PATH TARGET_FILE_PATH
        ,   FILE_NAME
        FROM CU_PACKET_FILE cpf
        WHERE 1 = 1
        AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND IMSI = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
        AND ENV_STATUS = 'local'

[36m2024-06-10 21:44:06.686[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:44:06.687[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:44:09.370[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:44:14.288[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:44:14.288[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:44:14.306[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            FILE_PATH TARGET_FILE_PATH
        ,   FILE_NAME
        FROM CU_PACKET_FILE cpf
        WHERE 1 = 1
        AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND IMSI = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
        AND ENV_STATUS = 'local'

[36m2024-06-10 21:44:14.356[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:44:14.357[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:44:19.375[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:44:24.502[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:44:24.504[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:44:24.524[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'O7nYNjntKMjRvhd0eH6vXfMA=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'O7nYNjntKMjRvhd0eH6vXfMA=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:44:26.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:44:26.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:44:26.412[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            FILE_PATH TARGET_FILE_PATH
        ,   FILE_NAME
        FROM CU_PACKET_FILE cpf
        WHERE 1 = 1
        AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND IMSI = 'O7nYNjntKMjRvhd0eH6vXfMA=='
        AND ENV_STATUS = 'local'

[36m2024-06-10 21:44:26.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:44:26.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:44:29.381[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:44:37.689[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:44:37.690[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:44:37.709[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:44:39.384[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:44:49.387[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:44:59.392[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:45:09.398[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:45:19.403[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:45:29.406[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:45:39.412[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:45:49.418[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:45:59.424[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:46:09.430[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:46:19.436[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:46:29.443[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:46:39.445[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:46:49.449[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:46:59.453[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:47:09.457[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:47:19.460[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:47:29.466[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:47:39.471[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:47:49.478[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:47:59.479[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:48:09.486[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:48:19.490[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:48:29.496[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:48:39.501[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:48:49.507[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:48:59.513[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:49:09.515[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:49:19.521[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:49:29.527[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:49:39.532[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:49:49.538[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:49:59.544[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:50:09.547[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:50:19.550[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:50:29.553[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:50:39.559[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:50:49.565[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:50:59.567[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:51:09.571[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:51:19.577[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:51:29.583[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:51:39.590[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:51:49.597[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:51:52.641[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-10 21:51:52.651[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:51:52.667[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-10 21:51:52.675[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-10 21:51:52.683[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-10 21:51:52.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:52.716[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:52.724[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:51:52.870[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:52.870[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:52.898[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:52.899[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:52.901[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:51:53.265[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:53.265[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:53.265[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:53.265[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:53.266[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:53.266[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:53.267[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 21:51:53.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:53.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:53.275[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:53.275[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:53.275[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:53.275[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:53.279[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:53.284[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:53.288[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-10 21:51:53.293[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-10 21:51:53.295[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 21:51:53.383[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:53.383[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:53.384[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-10 21:51:56.234[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:51:56.235[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:51:56.253[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:51:56.302[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:51:56.308[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:51:59.603[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:52:01.083[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:52:01.083[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:52:01.084[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before set Executor
[36m2024-06-10 21:52:01.084[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before Loop sArr
[36m2024-06-10 21:52:01.085[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before Future
[36m2024-06-10 21:52:01.150[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:52:01.151[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:52:01.150[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:52:01.150[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:52:01.151[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:52:01.528[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- IMSI : OK
[36m2024-06-10 21:52:01.529[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- ENB : OK
[36m2024-06-10 21:52:01.529[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- MME : OK
[36m2024-06-10 21:52:01.531[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- SGW : OK
[36m2024-06-10 21:52:01.531[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- PGW : OK
[36m2024-06-10 21:52:08.010[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:52:08.010[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:52:08.030[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:52:09.607[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:52:10.234[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:52:10.235[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:52:10.255[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            FILE_PATH TARGET_FILE_PATH
        ,   FILE_NAME
        FROM CU_PACKET_FILE cpf
        WHERE 1 = 1
        AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
        AND ENV_STATUS = 'local'

[36m2024-06-10 21:52:10.300[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:52:10.300[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:52:19.611[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:52:29.614[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:52:35.826[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:52:35.826[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:52:35.844[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            FILE_PATH TARGET_FILE_PATH
        ,   FILE_NAME
        FROM CU_PACKET_FILE cpf
        WHERE 1 = 1
        AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
        AND ENV_STATUS = 'local'

[36m2024-06-10 21:52:35.892[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:52:35.892[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:52:39.620[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:52:49.627[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:52:59.632[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:53:08.514[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:53:08.515[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:53:08.539[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0Lb+C+rzoVBploBIwNbFwNQ=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:53:09.638[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:53:13.188[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:53:13.189[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:53:13.208[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:53:19.641[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:53:29.647[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:53:39.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:53:49.655[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:53:59.661[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:54:00.500[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:00.501[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:00.528[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28355'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:54:00.628[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:54:00.631[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28355'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:54:02.521[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:02.521[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:02.540[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28356'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:54:02.584[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:54:02.586[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28356'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:54:04.228[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:04.228[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:04.247[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28576'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:54:04.291[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:54:04.293[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28576'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:54:05.820[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:05.820[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:05.839[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28302'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:54:05.886[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:54:05.888[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28302'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:54:08.535[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:08.536[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:08.557[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28081'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:54:08.600[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:54:08.603[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28081'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:54:09.663[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:54:10.381[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:10.381[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:10.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28592'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:54:10.454[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:54:10.456[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28592'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:54:11.743[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:11.743[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:11.765[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28593'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:54:11.810[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:54:11.812[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28593'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:54:12.900[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:12.901[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:12.925[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28594'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-10 21:54:12.970[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-10 21:54:12.972[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '28594'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-10 21:54:14.650[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:14.651[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:14.653[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before set Executor
[36m2024-06-10 21:54:14.653[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before Loop sArr
[36m2024-06-10 21:54:14.654[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before Future
[36m2024-06-10 21:54:14.717[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND ENB_ID = '28594'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:54:14.717[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND ENB_ID = '28594'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:54:14.717[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND ENB_ID = '28594'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:54:14.717[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND ENB_ID = '28594'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:54:14.717[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND ENB_ID = '28594'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-10 21:54:15.979[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- IMSI : OK
[36m2024-06-10 21:54:15.980[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- ENB : OK
[36m2024-06-10 21:54:15.982[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- MME : OK
[36m2024-06-10 21:54:15.982[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- SGW : OK
[36m2024-06-10 21:54:15.982[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- PGW : OK
[36m2024-06-10 21:54:17.694[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:17.694[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:17.713[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'O1C32T/gfBTsf9NMWrfkPfpw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'O1C32T/gfBTsf9NMWrfkPfpw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-10 21:54:19.669[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:54:29.674[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:54:33.346[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:33.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:33.365[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:54:34.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:34.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:34.372[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:54:37.267[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:37.268[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:37.285[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:54:39.680[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:54:42.540[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:42.543[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:42.563[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:54:43.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:43.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:43.423[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:54:45.809[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-10 21:54:45.809[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-10 21:54:45.830[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-10 21:54:49.683[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-10 21:54:54.112[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-10 21:54:54.113[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-06-10 21:54:54.154[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
