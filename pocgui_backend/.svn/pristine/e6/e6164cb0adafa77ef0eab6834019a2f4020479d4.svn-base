package com.mobigen.cdev.datagw.module.common.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.assertj.core.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.core.env.Environment;

import com.mobigen.cdev.datagw.core.file.excel.handler.ExcelDefaultExceptionHandler;
import com.mobigen.cdev.datagw.core.file.dto.ExcelDto;
import com.mobigen.cdev.datagw.module.common.dto.user.UserInfoDto;
import com.mobigen.cdev.datagw.module.common.repository.mybatis.CommonRepository;


@SpringBootTest
@Disabled
public class CommonServiceImplTest {
    private final CommonRepository commonRepository;
    private final CommonService commonService;
    private final Environment env;

    @Autowired
    public CommonServiceImplTest(CommonService commonService, CommonRepository commonRepository, Environment env) {
        this.commonService = commonService;
        this.commonRepository = commonRepository;
        this.env = env;
    }

    @Test
    @DisplayName("사용자 ID 조건으로 사용자 정보 조회 하기 테스트 Mybatis pemdb1")
    void getUserList() {
        // given
        String userId = "PTN1889130";
        UserInfoDto userInfoDto = new UserInfoDto();
        userInfoDto.setUser_id(userId);

        // when
        Map<String, Object> param = new HashMap<>();
        param.put("userId", userInfoDto.getUser_id());
        param.put("checkUserPassYn", "N");
        List<UserInfoDto> userListByUserId = commonRepository.getUserList(param);

        // then
        Assertions.assertThat(userId).isEqualTo(userListByUserId.get(0).getUser_id());
    }

    @Test
    void getUserListTest() {
        // given
        Map<String, Object> param = new HashMap<>();
        // Param For Query
        param.put("userId", "ALL");
        param.put("checkUserPassYn", "N");

        List<UserInfoDto> userDtoList = commonRepository.getUserList(param);
        for (UserInfoDto userInfoDto : userDtoList) {
			System.out.println("userName = " + userInfoDto.getUser_name());
		}
        Assertions.assertThat(userDtoList.size() > 0).isTrue();
    }

    @Test
    @Disabled
    @DisplayName("사용자 리스트 EXCEL 처리 테스트 / Excel Down 경로 Properties 수정 수 사용 할 것!!!")
    void getUserListExcelTest() {
        // given
        Map<String, Object> param = new HashMap<>();
        // Param For Query
        param.put("userId", "ALL");
        param.put("checkUserPassYn", "N");
        // Param For Excel
        param.put("fileExt", "xlsx");
        param.put("fileName", "user_list");
        param.put("sheetName", "user_list");
        param.put("columnId", "user_id,user_name,email,update_time,update_user");
        param.put("titleName", "user_id,user_name,email,update_time,update_user");
        param.put("groupInfo", "0:2:사용자 정보,3:4:등록 정보");

        // when
        ExcelDto excelDto = new ExcelDto();
        ExcelDefaultExceptionHandler resultHandler = new ExcelDefaultExceptionHandler(param);
        commonRepository.getUserListExcel(param, resultHandler);
        excelDto.setFile_ext(param.get("fileExt").toString());
        excelDto.setFile_name(param.get("fileName").toString());
        String resultFileName = resultHandler.execute();
        excelDto.setTarget_file(resultFileName);

        Assertions.assertThat(resultFileName.contains("xlsx")).isTrue();
    }

    @Test
    @DisplayName("EnvStatus Annotation Test")
    void getUserListForEnvStatusAnnotationTest() {
        // givne
        String userId = "2022090001";
        UserInfoDto userInfoDto = new UserInfoDto();
        userInfoDto.setUser_id(userId);
        String activeProfile = env.getProperty("spring.profiles.active");

        // when
        Map<String, Object> param = new HashMap<>();
        param.put("userId", userInfoDto.getUser_id());
        param.put("checkUserPassYn", "N");


        // then
        commonService.setParamEnvStatus(param);
        String envStatus = param.get("envStatus").toString();
        // System.out.println("envStatus = " + envStatus);

        Assertions.assertThat(activeProfile).isEqualTo(envStatus);
    }
    
}
