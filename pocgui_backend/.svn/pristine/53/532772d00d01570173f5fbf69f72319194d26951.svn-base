package com.mobigen.cdev.datagw.module.collect.history.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.mobigen.cdev.datagw.module.collect.history.service.CollectHistoryService;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.mobigen.cdev.datagw.config.AsyncConfig;
import com.mobigen.cdev.datagw.core.base.dto.RsResultDto;
import com.mobigen.cdev.datagw.core.exception.RsRuntimeException;
import com.mobigen.cdev.datagw.core.security.annotation.LoginUserParam;
import com.mobigen.cdev.datagw.module.common.dto.user.UserInfoDto;

@RestController
@RequestMapping("collect/history")
public class CollectHistoryController {

  private final CollectHistoryService collectHistoryService;
  private final AsyncConfig asyncConfig;
  public CollectHistoryController(CollectHistoryService collectHistoryService, AsyncConfig asyncConfig) {
    this.collectHistoryService = collectHistoryService;
	this.asyncConfig = asyncConfig;
  }
  
  @PostMapping(value = "/getHistoryList", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<RsResultDto> getHistoryList(@RequestBody Map<String, Object> param, HttpServletRequest request, HttpServletResponse response) {
		RsResultDto result = new RsResultDto();
		result.setRs(collectHistoryService.getHistoryList(param));
		return ResponseEntity.ok(result);
	}

	@PostMapping(value = "/getHistoryListExcel", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<RsResultDto> getHistoryListExcel(@RequestBody Map<String, Object> param, HttpServletRequest request, HttpServletResponse response) {
		RsResultDto result = new RsResultDto();
		result.setRs(collectHistoryService.getHistoryListExcel(param));
		return ResponseEntity.ok(result);
	}
  	
  @PostMapping(value = "/requestRetry", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<RsResultDto> requestRetry(@RequestBody Map<String, Object> param, @LoginUserParam UserInfoDto userInfoDto, HttpServletRequest request, HttpServletResponse response) {
		RsResultDto result = new RsResultDto();
		try {
			if (asyncConfig.chkValidTaskCondition()) {
				// reg (regForRetry 서비스 내 transaction 처리)
				param.put("userId", userInfoDto.getUser_id());
				param.put("userInfoDto", userInfoDto);
				result.setRs(collectHistoryService.regForRetry(param));
				// command (~ Aync 처리)
				collectHistoryService.runCommandForRetry(param);
			}
		} catch (Exception e) {
			// result.setRs("1");
			throw new RsRuntimeException(e);
		}
		return ResponseEntity.ok(result);
	}
	
	@PostMapping(value = "/getRetryHistoryList", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<RsResultDto> getRetryHistoryList(@RequestBody Map<String, Object> param, HttpServletRequest request, HttpServletResponse response) {
		RsResultDto result = new RsResultDto();
		result.setRs(collectHistoryService.getRetryHistoryList(param));
		return ResponseEntity.ok(result);
	}
	
	@PostMapping(value = "/getHistoryStatusTime", produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<RsResultDto> getHistoryStatusTime(@RequestBody Map<String, Object> param, HttpServletRequest request, HttpServletResponse response) {
		RsResultDto result = new RsResultDto();
		result.setRs(collectHistoryService.getHistoryStatusTime(param));
		return ResponseEntity.ok(result);
	}
  

}
