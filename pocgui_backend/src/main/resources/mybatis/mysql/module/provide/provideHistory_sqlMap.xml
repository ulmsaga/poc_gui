<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mobigen.cdev.mapper.mysql.module.provide.history">

  <!--  -->
  <!-- def_tables -->
  <sql id="def_table_history">provide_hist</sql>
  <sql id="def_table_retry">provide_retry</sql>
  <sql id="def_table_interface">
    <include refid="com.mobigen.cdev.mapper.mysql.module.provide.interfacesource.def_table_interface"/>
  </sql>
  <!--
  <sql id="def_table_source">
    <include refid="com.mobigen.cdev.mapper.mysql.module.provide.interfacesource.def_table_source"/>
  </sql>
  -->
  <sql id="def_table_stat_status">
    stat_status
  </sql>

  <!-- def_tables -->
  <!--  -->

  <!--  -->
  <!-- history list -->
  <select id="getHistoryList" parameterType="map" resultType="com.mobigen.cdev.poc.module.provide.history.dto.ProvideHistoryDto">
    <!-- PARAM : pagePerCount, currPage 필수 -->
    <include refid='com.mobigen.cdev.mapper.mysql.core.paging.pagingPreSQL' />
    <include refid='sqlGetHistoryList' />
    <include refid='com.mobigen.cdev.mapper.mysql.core.paging.pagingPostSQL' />
  </select>
  <select id="getHistoryListExcel" parameterType="map" resultType="java.util.HashMap">
    <include refid='sqlGetHistoryList' />
  </select>
  <sql id="sqlGetHistoryList">
    <include refid="sqlHistoryListSelectFrom" />
    <include refid="sqlHistoryListWhereCondDefault" />
    <include refid="sqlHistoryListOrderBy" />
  </sql>

  <!-- 2023.11.03-->
  <sql id="sqlHistoryListSelectFrom">
    SELECT
      <!--
      <if test='interfaceType eq "collect".toString()'>
          A.collect_hist_id
        ,	DATE_FORMAT(A.collected_at, '%Y-%m-%dT%H:%i:%s') collected_at
        ,	A.collect_source_seq
      </if>
      <if test='interfaceType eq "provide".toString()'>
          A.provide_hist_id
        ,	DATE_FORMAT(A.provided_at, '%Y-%m-%dT%H:%i:%s') provided_at
        ,	A.provide_source_seq
      </if>
      -->
      A.provide_hist_id
    ,	DATE_FORMAT(A.provided_at, '%Y-%m-%dT%H:%i:%s') provided_at
    ,	DATE_FORMAT(A.started_at, '%Y-%m-%d %H:%i:%s') started_at 
		,	DATE_FORMAT(A.ended_at, '%Y-%m-%d %H:%i:%s') ended_at  
    ,	A.interface_id
    ,	A.system_cd 
    ,	D.system_nm
    ,	B.interface_nm 
    ,	B.protocol_cd
    ,	B.interface_cycle
    , G.interface_cycle_nm
    <!--
    ,	C.data_id
    ,	C.hdfs_dir
    -->
    ,	A.local_path 
    ,	A.dest_path
    ,	A.filenm
    ,	A.file_size
    ,	A.host_nm
    ,	A.target_dt
    ,	A.task_log_url
    ,	A.status_cd
    ,	CASE 
        WHEN IFNULL(E.status_nm, '-') = '-' THEN
          CASE
            WHEN A.status_cd = '200' THEN
              '200 OK'
            ELSE
              IFNULL(E.status_nm, '-')
            END
        ELSE
          E.status_nm
      END status_nm
    , E.description
    ,	A.err_msg
    , F.last_started_by
    ,	A.retry
    ,	CASE A.retry 
        WHEN '1' THEN '진행중'
        WHEN '0' THEN
          CASE IFNULL(F.retry_count, 0)
            WHEN 0 THEN '대기'
            ELSE '대기(이력있음)'
          END
      END retry_desc
    ,	IFNULL(F.retry_count, 0) retry_count
    FROM 
      <include refid="def_table_history" /> A
      LEFT OUTER JOIN
      <include refid="def_table_interface" /> B
      ON A.interface_id = B.interface_id
      LEFT OUTER JOIN
      <include refid="com.mobigen.cdev.mapper.mysql.module.common.def_common_interface_cycle" /> G
      ON B.interface_cycle = G.interface_cycle
      <!--
      LEFT OUTER JOIN
      <include refid="def_table_source" /> C
      ON A.interface_id = C.interface_id
      <if test='interfaceType eq "collect".toString()'>
        AND A.collect_source_seq = C.collect_source_seq
      </if>
      <if test='interfaceType eq "provide".toString()'>
        AND A.provide_source_seq = C.provide_source_seq
      </if>
      -->
      LEFT OUTER JOIN
      (
        SELECT
          <!--
          <if test='interfaceType eq "collect".toString()'>
            collect_hist_id
          </if>
          <if test='interfaceType eq "provide".toString()'>
            provide_hist_id
          </if>
          -->
          provide_hist_id
        , COUNT(*) retry_count
        ,	CASE
	        	WHEN COUNT(*) &gt; 1 THEN
        			CONCAT(substring_index(GROUP_CONCAT(CONCAT(B.user_name, '(', A.started_by , ' ', insa_team_name, ')') order by retry_id_seq desc), ',', 1), ' 외 ', COUNT(*) - 1, '명')
        		ELSE
        			GROUP_CONCAT( CONCAT(B.user_name, '(', A.started_by , ' ', insa_team_name, ')') )
        	END last_started_by
        FROM 
          <include refid="def_table_retry" /> A
        	LEFT OUTER JOIN (SELECT user_id, user_name, phone, insa_team_name FROM guiweb.cm_user WHERE use_yn  = 'Y') B 
        	ON A.started_by  = B.user_id
        GROUP BY
          <!--
          <if test='interfaceType eq "collect".toString()'> collect_hist_id </if>
          <if test='interfaceType eq "provide".toString()'> provide_hist_id </if>
          -->
          provide_hist_id
      ) F
      ON
        <!--
        <if test='interfaceType eq "collect".toString()'> A.collect_hist_id = F.collect_hist_id </if>
        <if test='interfaceType eq "provide".toString()'> A.provide_hist_id = F.provide_hist_id </if>
        -->
        A.provide_hist_id = F.provide_hist_id
      LEFT OUTER JOIN	system_code D
      ON A.system_cd = D.system_cd
      LEFT OUTER JOIN status_code E
      ON A.status_cd = E.status_cd
    WHERE 1 = 1
  </sql>
  <sql id="sqlHistoryListWhereCondDefault">
    AND started_at &gt;= DATE_FORMAT(#{startTime}, '%Y%m%d%H%i%s')
    AND started_at &lt;= DATE_FORMAT(#{endTime}, '%Y%m%d%H%i%s')

    <if test = 'interfaceId != null and interfaceId neq "".toString()'>
      AND (
                A.interface_id LIKE CONCAT('%', #{interfaceId}, '%')
            OR  A.interface_id regexp #{interfaceId}
          )
    </if>
    <if test = 'nmsList != null and nmsList.size != 0' >
      AND A.system_cd IN <foreach item="item" index="index" collection="nmsList" open="(" separator="," close=")">#{item}</foreach>
    </if>
    <if test = 'protocolList != null and protocolList.size != 0' >
      AND B.protocol_cd IN <foreach item="item" index="index" collection="protocolList" open="(" separator="," close=")">#{item}</foreach>
    </if>
    <if test = 'statusCodeList != null and statusCodeList.size != 0' >
      AND A.status_cd IN <foreach item="item" index="index" collection="statusCodeList" open="(" separator="," close=")">#{item}</foreach>
    </if>
    <if test = 'retryCondList != null and retryCondList.size != 0' >
      AND 
        (
          <foreach item="item" index="index" collection="retryCondList" open="(" separator="OR" close=")">
            <choose>
              <when test='item eq "2".toString()'>
                A.retry = '0' AND F.retry_count &gt; 0
              </when>
              <when test='item eq "0".toString()'>
                A.retry = '0' AND IFNULL(F.retry_count, 0) = 0
              </when>
              <otherwise>
                A.retry = #{item}
              </otherwise>
            </choose>
          </foreach>
        )
    </if>
    <if test = 'localPath != null and localPath neq "".toString()'>
      AND (
                A.local_path LIKE CONCAT('%', #{localPath}, '%')
            OR  A.local_path regexp #{localPath}
          )
    </if>
    <if test = 'destPath != null and destPath neq "".toString()'>
      AND (
                A.dest_path LIKE CONCAT('%', #{destPath}, '%')
            OR  A.dest_path regexp #{destPath}
          )
    </if>
    <if test = 'filenm != null and filenm neq "".toString()'>
      AND (
                A.filenm LIKE CONCAT('%', #{filenm}, '%')
            OR  A.filenm regexp #{filenm}
          )
    </if>
  </sql>
  <sql id="sqlHistoryListWhereCondHistId">
    <!--
    <if test='interfaceType eq "collect".toString()'>
      AND A.collect_hist_id = #{collectHistId}
    </if>
    <if test='interfaceType eq "provide".toString()'>
      AND A.provide_hist_id = #{provideHistId}
    </if>
    -->
    AND A.provide_hist_id = #{provideHistId}
  </sql>
  <sql id="sqlHistoryListWhereCondHistIdList">
    <!--
    <if test='interfaceType eq "collect".toString()'>
      AND A.collect_hist_id IN <foreach item="item" index="index" collection="collectHistIdList" open="(" separator="," close=")">#{item}</foreach>
    </if>
    <if test='interfaceType eq "provide".toString()'>
      AND A.provide_hist_id IN <foreach item="item" index="index" collection="provideHistIdList" open="(" separator="," close=")">#{item}</foreach>
    </if>
    -->
    AND A.provide_hist_id IN <foreach item="item" index="index" collection="provideHistIdList" open="(" separator="," close=")">#{item}</foreach>
  </sql>
  <sql id="sqlHistoryListOrderBy">
    ORDER BY
      <!--
      <if test='interfaceType eq "collect".toString()'> A.collect_hist_id DESC </if>
      <if test='interfaceType eq "provide".toString()'> A.provide_hist_id DESC </if>
      -->
      A.provide_hist_id DESC
  </sql>

  <!-- History List End-->
  <!--  -->

</mapper>