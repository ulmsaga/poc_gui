[36m2024-06-15 11:17:38.711[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 2715 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source)
[36m2024-06-15 11:17:38.713[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-15 11:17:38.713[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-15 11:17:39.058[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-15 11:17:39.099[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interfaces.
[36m2024-06-15 11:17:39.260[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-15 11:17:39.827[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-15 11:17:39.838[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-15 11:17:39.839[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-15 11:17:39.840[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-15 11:17:39.931[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-15 11:17:39.931[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1190 ms
[36m2024-06-15 11:17:40.086[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-15 11:17:40.138[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-15 11:17:40.274[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-15 11:17:40.410[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-15 11:17:40.556[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-15 11:17:40.579[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-15 11:17:40.882[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-15 11:17:40.887[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-15 11:17:41.574[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-15 11:17:41.700[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as unsigned), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as unsigned), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as unsigned), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-15 11:17:41.701[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as unsigned), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as unsigned), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as unsigned), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-15 11:17:41.701[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                CONCAT('BRANCH_', A.branch_id) branch_id
            ,	B.branch_name
            ,	CONCAT('TEAM_', A.opteam_id) opteam_id
            ,	C.team_name opteam_name
            ,	CONCAT('PART_', A.part_id) part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-15 11:17:41.701[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                CONCAT('BRANCH_', A.branch_id) branch_id
            ,	B.branch_name
            ,	CONCAT('TEAM_', A.opteam_id) opteam_id
            ,	C.team_name opteam_name
            ,	CONCAT('PART_', A.part_id) part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-15 11:17:41.823[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@59b43e35, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@66297b63, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c8f7d6a, org.springframework.security.web.header.HeaderWriterFilter@1df83569, org.springframework.security.web.authentication.logout.LogoutFilter@106c73ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@98a0842, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@56f569e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d7f2719, org.springframework.security.web.session.SessionManagementFilter@12f933c7, org.springframework.security.web.access.ExceptionTranslationFilter@170937fe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@121f97fb]
[36m2024-06-15 11:17:41.874[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-15 11:17:42.209[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-15 11:17:42.228[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-15 11:17:42.236[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.911 seconds (JVM running for 4.472)
[36m2024-06-15 11:17:49.250[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-15 11:17:49.250[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-15 11:17:49.250[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-15 11:17:49.250[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-15 11:17:49.250[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:17:59.255[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:18:09.261[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:18:19.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:18:29.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:18:39.278[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:18:49.284[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:18:59.285[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:19:09.291[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:19:12.918[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-06-15 11:19:12.919[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-06-15 11:19:12.920[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-06-15 11:19:13.172[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-15 11:19:13.205[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email

			,	MIN(A.role_id) role_id
			,	(select role_name from CM_ROLE where role_id = MIN(A.role_id)) role_name
			,	(select role_desc from CM_ROLE where role_id = MIN(A.role_id)) role_desc
			,	B.module_id
			,	min(ifnull(target_use_lv, 5)) target_use_lv
			,	min(ifnull(target_read_lv, 5)) target_read_lv
			,	min(ifnull(target_create_lv, 5)) target_create_lv
			,	min(ifnull(target_modify_lv, 5)) target_modify_lv
			,	min(ifnull(target_delete_lv, 5)) target_delete_lv
			,	min(ifnull(target_confirm_lv, 5)) target_confirm_lv
			,	min(ifnull(target_func01_lv, 5)) target_func01_lv
			,	min(ifnull(target_func02_lv, 5)) target_func02_lv
			,	min(ifnull(target_func03_lv, 5)) target_func03_lv
			,	min(ifnull(target_func04_lv, 5)) target_func04_lv
			,	min(ifnull(target_func05_lv, 5)) target_func05_lv
			,	min(ifnull(target_func06_lv, 5)) target_func06_lv
			,	min(ifnull(target_func07_lv, 5)) target_func07_lv
			,	min(ifnull(target_func08_lv, 5)) target_func08_lv
			,	min(ifnull(target_func09_lv, 5)) target_func09_lv
			,	min(ifnull(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-15 11:19:13.236[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-15 11:19:13.248[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-15 11:19:13.266[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email

			,	MIN(A.role_id) role_id
			,	(select role_name from CM_ROLE where role_id = MIN(A.role_id)) role_name
			,	(select role_desc from CM_ROLE where role_id = MIN(A.role_id)) role_desc
			,	B.module_id
			,	min(ifnull(target_use_lv, 5)) target_use_lv
			,	min(ifnull(target_read_lv, 5)) target_read_lv
			,	min(ifnull(target_create_lv, 5)) target_create_lv
			,	min(ifnull(target_modify_lv, 5)) target_modify_lv
			,	min(ifnull(target_delete_lv, 5)) target_delete_lv
			,	min(ifnull(target_confirm_lv, 5)) target_confirm_lv
			,	min(ifnull(target_func01_lv, 5)) target_func01_lv
			,	min(ifnull(target_func02_lv, 5)) target_func02_lv
			,	min(ifnull(target_func03_lv, 5)) target_func03_lv
			,	min(ifnull(target_func04_lv, 5)) target_func04_lv
			,	min(ifnull(target_func05_lv, 5)) target_func05_lv
			,	min(ifnull(target_func06_lv, 5)) target_func06_lv
			,	min(ifnull(target_func07_lv, 5)) target_func07_lv
			,	min(ifnull(target_func08_lv, 5)) target_func08_lv
			,	min(ifnull(target_func09_lv, 5)) target_func09_lv
			,	min(ifnull(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-15 11:19:13.315[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:13.315[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:13.351[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email

			,	MIN(A.role_id) role_id
			,	(select role_name from CM_ROLE where role_id = MIN(A.role_id)) role_name
			,	(select role_desc from CM_ROLE where role_id = MIN(A.role_id)) role_desc
			,	B.module_id
			,	min(ifnull(target_use_lv, 5)) target_use_lv
			,	min(ifnull(target_read_lv, 5)) target_read_lv
			,	min(ifnull(target_create_lv, 5)) target_create_lv
			,	min(ifnull(target_modify_lv, 5)) target_modify_lv
			,	min(ifnull(target_delete_lv, 5)) target_delete_lv
			,	min(ifnull(target_confirm_lv, 5)) target_confirm_lv
			,	min(ifnull(target_func01_lv, 5)) target_func01_lv
			,	min(ifnull(target_func02_lv, 5)) target_func02_lv
			,	min(ifnull(target_func03_lv, 5)) target_func03_lv
			,	min(ifnull(target_func04_lv, 5)) target_func04_lv
			,	min(ifnull(target_func05_lv, 5)) target_func05_lv
			,	min(ifnull(target_func06_lv, 5)) target_func06_lv
			,	min(ifnull(target_func07_lv, 5)) target_func07_lv
			,	min(ifnull(target_func08_lv, 5)) target_func08_lv
			,	min(ifnull(target_func09_lv, 5)) target_func09_lv
			,	min(ifnull(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-15 11:19:13.507[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:13.508[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:13.539[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:13.540[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:13.545[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email

			,	MIN(A.role_id) role_id
			,	(select role_name from CM_ROLE where role_id = MIN(A.role_id)) role_name
			,	(select role_desc from CM_ROLE where role_id = MIN(A.role_id)) role_desc
			,	B.module_id
			,	min(ifnull(target_use_lv, 5)) target_use_lv
			,	min(ifnull(target_read_lv, 5)) target_read_lv
			,	min(ifnull(target_create_lv, 5)) target_create_lv
			,	min(ifnull(target_modify_lv, 5)) target_modify_lv
			,	min(ifnull(target_delete_lv, 5)) target_delete_lv
			,	min(ifnull(target_confirm_lv, 5)) target_confirm_lv
			,	min(ifnull(target_func01_lv, 5)) target_func01_lv
			,	min(ifnull(target_func02_lv, 5)) target_func02_lv
			,	min(ifnull(target_func03_lv, 5)) target_func03_lv
			,	min(ifnull(target_func04_lv, 5)) target_func04_lv
			,	min(ifnull(target_func05_lv, 5)) target_func05_lv
			,	min(ifnull(target_func06_lv, 5)) target_func06_lv
			,	min(ifnull(target_func07_lv, 5)) target_func07_lv
			,	min(ifnull(target_func08_lv, 5)) target_func08_lv
			,	min(ifnull(target_func09_lv, 5)) target_func09_lv
			,	min(ifnull(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-15 11:19:13.545[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:13.550[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:13.570[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email

			,	MIN(A.role_id) role_id
			,	(select role_name from CM_ROLE where role_id = MIN(A.role_id)) role_name
			,	(select role_desc from CM_ROLE where role_id = MIN(A.role_id)) role_desc
			,	B.module_id
			,	min(ifnull(target_use_lv, 5)) target_use_lv
			,	min(ifnull(target_read_lv, 5)) target_read_lv
			,	min(ifnull(target_create_lv, 5)) target_create_lv
			,	min(ifnull(target_modify_lv, 5)) target_modify_lv
			,	min(ifnull(target_delete_lv, 5)) target_delete_lv
			,	min(ifnull(target_confirm_lv, 5)) target_confirm_lv
			,	min(ifnull(target_func01_lv, 5)) target_func01_lv
			,	min(ifnull(target_func02_lv, 5)) target_func02_lv
			,	min(ifnull(target_func03_lv, 5)) target_func03_lv
			,	min(ifnull(target_func04_lv, 5)) target_func04_lv
			,	min(ifnull(target_func05_lv, 5)) target_func05_lv
			,	min(ifnull(target_func06_lv, 5)) target_func06_lv
			,	min(ifnull(target_func07_lv, 5)) target_func07_lv
			,	min(ifnull(target_func08_lv, 5)) target_func08_lv
			,	min(ifnull(target_func09_lv, 5)) target_func09_lv
			,	min(ifnull(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-15 11:19:13.900[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:13.900[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:13.900[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:13.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:13.925[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:13.926[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:13.927[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:13.927[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:13.927[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:13.928[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:13.928[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:13.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:13.934[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-15 11:19:13.942[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-15 11:19:13.961[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as unsigned), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as unsigned), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as unsigned), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-15 11:19:14.001[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:14.002[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:14.004[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-15 11:19:16.805[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:19:16.805[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:19:16.816[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email

			,	MIN(A.role_id) role_id
			,	(select role_name from CM_ROLE where role_id = MIN(A.role_id)) role_name
			,	(select role_desc from CM_ROLE where role_id = MIN(A.role_id)) role_desc
			,	B.module_id
			,	min(ifnull(target_use_lv, 5)) target_use_lv
			,	min(ifnull(target_read_lv, 5)) target_read_lv
			,	min(ifnull(target_create_lv, 5)) target_create_lv
			,	min(ifnull(target_modify_lv, 5)) target_modify_lv
			,	min(ifnull(target_delete_lv, 5)) target_delete_lv
			,	min(ifnull(target_confirm_lv, 5)) target_confirm_lv
			,	min(ifnull(target_func01_lv, 5)) target_func01_lv
			,	min(ifnull(target_func02_lv, 5)) target_func02_lv
			,	min(ifnull(target_func03_lv, 5)) target_func03_lv
			,	min(ifnull(target_func04_lv, 5)) target_func04_lv
			,	min(ifnull(target_func05_lv, 5)) target_func05_lv
			,	min(ifnull(target_func06_lv, 5)) target_func06_lv
			,	min(ifnull(target_func07_lv, 5)) target_func07_lv
			,	min(ifnull(target_func08_lv, 5)) target_func08_lv
			,	min(ifnull(target_func09_lv, 5)) target_func09_lv
			,	min(ifnull(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-15 11:19:19.292[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:19:29.294[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:19:39.298[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:19:49.305[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:19:59.312[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:20:09.317[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:20:13.899[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:20:13.899[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:20:13.909[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-15 11:20:14.011[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:20:14.011[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:20:14.025[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-15 11:20:19.323[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:20:29.329[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:20:39.335[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:20:49.338[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:20:59.341[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:21:09.346[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:21:13.924[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:21:13.924[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:21:13.935[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-15 11:21:14.013[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:21:14.013[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:21:14.023[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-15 11:21:19.352[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:21:29.359[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:21:39.362[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:21:49.368[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:21:59.374[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:22:09.379[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:22:13.904[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:22:13.905[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:22:13.914[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-15 11:22:14.008[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-15 11:22:14.008[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-15 11:22:14.017[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-15 11:22:19.385[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:22:29.388[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:22:39.394[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-15 11:22:49.397[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
